name: Game Results Monitor V2

on:
  schedule:
    # –ù–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä (–≤—Å–µ –≤—Ä–µ–º–µ–Ω–∞ —É–∫–∞–∑–∞–Ω—ã –≤ UTC):
    # –ë—É–¥–Ω–∏ (–ü–Ω-–ü—Ç): 16:30-21:30 UTC = 19:30-00:30 MSK –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    # –í—ã—Ö–æ–¥–Ω—ã–µ (–°–±-–í—Å): 08:30-21:30 UTC = 11:30-00:30 MSK –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    
    # –ë—É–¥–Ω–∏ (–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ü—è—Ç–Ω–∏—Ü–∞): 16:30-20:59 UTC = 19:30-23:59 MSK
    - cron: '30,45 16 * * 1-5'  # 16:30, 16:45 UTC = 19:30, 19:45 MSK
    - cron: '0,15,30,45 17-20 * * 1-5'  # 17:00-20:59 UTC = 20:00-23:59 MSK –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    
    # –ë—É–¥–Ω–∏ (–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫-–ü—è—Ç–Ω–∏—Ü–∞): 21:00-21:30 UTC = 00:00-00:30 MSK (—Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å)
    - cron: '0,15,30 21 * * 1-5'  # 21:00, 21:15, 21:30 UTC = 00:00, 00:15, 00:30 MSK (–í—Ç-–°–±)
    
    # –í—ã—Ö–æ–¥–Ω—ã–µ (–°—É–±–±–æ—Ç–∞-–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ): 08:30-20:59 UTC = 11:30-23:59 MSK
    - cron: '30,45 8 * * 6,0'  # 08:30, 08:45 UTC = 11:30, 11:45 MSK
    - cron: '0,15,30,45 9-20 * * 6,0'  # 09:00-20:59 UTC = 12:00-23:59 MSK –∫–∞–∂–¥—ã–µ 15 –º–∏–Ω—É—Ç
    
    # –í—ã—Ö–æ–¥–Ω—ã–µ (–°—É–±–±–æ—Ç–∞-–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ): 21:00-21:30 UTC = 00:00-00:30 MSK (—Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å)
    - cron: '0,15,30 21 * * 6,0'  # 21:00, 21:15, 21:30 UTC = 00:00, 00:15, 00:30 MSK (–í—Å-–ü–Ω)
    
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

jobs:
  monitor-game-results:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Restore game results cache
      uses: actions/cache@v3
      with:
        path: |
          game_results_history.json
          test_game_results_history.json
        key: game-results-${{ github.ref }}
        restore-keys: |
          game-results-
        
    - name: Check game results files
      run: |
        echo "üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò–ì–†"
        echo "=================================================="
        echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤:"
        ls -la *.json 2>/dev/null || echo "‚ùå JSON —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo ""
        echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ game_results_history.json (–µ—Å–ª–∏ –µ—Å—Ç—å):"
        if [ -f "game_results_history.json" ]; then
          cat game_results_history.json
        else
          echo "‚ùå –§–∞–π–ª game_results_history.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        echo "=================================================="
        
    - name: Initialize game results files
      run: |
        echo "üîß –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –§–ê–ô–õ–û–í –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò–ì–†"
        echo "=================================================="
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if [ ! -f "game_results_history.json" ]; then
          echo "üìù –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π game_results_history.json"
          echo '{}' > game_results_history.json
        fi
        if [ ! -f "test_game_results_history.json" ]; then
          echo "üìù –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π test_game_results_history.json"
          echo '{}' > test_game_results_history.json
        fi
        echo "‚úÖ –§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
        echo "=================================================="
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-github.txt
        
    - name: Create .env file
      run: |
        echo "üîß –°–û–ó–î–ê–ù–ò–ï –§–ê–ô–õ–ê .ENV"
        echo "=================================================="
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π .env —Ñ–∞–π–ª
        touch .env
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –ø—É—Å—Ç—ã–µ
        if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
          echo "‚úÖ BOT_TOKEN –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env"
        else
          echo "‚ö†Ô∏è BOT_TOKEN –ø—É—Å—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
        
        if [ ! -z "${{ secrets.CHAT_ID }}" ]; then
          echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env
          echo "‚úÖ CHAT_ID –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env"
        else
          echo "‚ö†Ô∏è CHAT_ID –ø—É—Å—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
        
        if [ ! -z "${{ secrets.ANNOUNCEMENTS_TOPIC_ID }}" ]; then
          echo "ANNOUNCEMENTS_TOPIC_ID=${{ secrets.ANNOUNCEMENTS_TOPIC_ID }}" >> .env
          echo "‚úÖ ANNOUNCEMENTS_TOPIC_ID –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env"
        else
          echo "‚ö†Ô∏è ANNOUNCEMENTS_TOPIC_ID –ø—É—Å—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
        
        if [ ! -z "${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}" ]; then
          echo "GOOGLE_SHEETS_CREDENTIALS=${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}" >> .env
          echo "‚úÖ GOOGLE_SHEETS_CREDENTIALS –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env"
        else
          echo "‚ö†Ô∏è GOOGLE_SHEETS_CREDENTIALS –ø—É—Å—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
        
        if [ ! -z "${{ secrets.SPREADSHEET_ID }}" ]; then
          echo "SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }}" >> .env
          echo "‚úÖ SPREADSHEET_ID –¥–æ–±–∞–≤–ª–µ–Ω –≤ .env"
        else
          echo "‚ö†Ô∏è SPREADSHEET_ID –ø—É—Å—Ç–æ–π, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
        fi
        
        echo ""
        echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:"
        cat .env
        echo "=================================================="
        
    - name: Run Game Results Monitor V2
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        ANNOUNCEMENTS_TOPIC_ID: ${{ secrets.ANNOUNCEMENTS_TOPIC_ID }}
        GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      run: |
        echo "üèÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä V2..."
        echo "üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $(date)"
        echo "üìÖ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: $(date +%u)"
        echo "üïê –ß–∞—Å: $(date +%H)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if [ -z "$BOT_TOKEN" ]; then
          echo "‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
          exit 1
        fi
        if [ -z "$CHAT_ID" ]; then
          echo "‚ùå CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
          exit 1
        fi
        
        echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
        echo "üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:"
        echo "=================================================="
        echo "üìã –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
        echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
        ls -la
        
        echo ""
        echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Python —Ñ–∞–π–ª–æ–≤:"
        if [ -f "run_game_results_monitor_final.py" ]; then
          echo "‚úÖ run_game_results_monitor_final.py –Ω–∞–π–¥–µ–Ω"
          echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:"
          head -10 run_game_results_monitor_final.py
        else
          echo "‚ùå run_game_results_monitor_final.py –ù–ï –Ω–∞–π–¥–µ–Ω"
        fi
        
        if [ -f "game_results_monitor_final.py" ]; then
          echo "‚úÖ game_results_monitor_final.py –Ω–∞–π–¥–µ–Ω"
        else
          echo "‚ùå game_results_monitor_final.py –ù–ï –Ω–∞–π–¥–µ–Ω"
        fi
        
        if [ -f "game_system_manager.py" ]; then
          echo "‚úÖ game_system_manager.py –Ω–∞–π–¥–µ–Ω"
        else
          echo "‚ùå game_system_manager.py –ù–ï –Ω–∞–π–¥–µ–Ω"
        fi
        
        if [ -f "datetime_utils.py" ]; then
          echo "‚úÖ datetime_utils.py –Ω–∞–π–¥–µ–Ω"
        else
          echo "‚ùå datetime_utils.py –ù–ï –Ω–∞–π–¥–µ–Ω"
        fi
        
        echo "=================================================="
        echo "üîÑ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
        echo "=================================================="
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        echo "üîç –ü–†–û–í–ï–†–ö–ê .ENV –§–ê–ô–õ–ê:"
        echo "=================================================="
        if [ -f ".env" ]; then
          echo "‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
                  echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:"
        cat .env
        echo ""
        echo "üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –≤ .env:"
        wc -l .env
        echo ""
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ .env —Ñ–∞–π–ª–∞:"
        if [ -f ".env" ]; then
          line_number=1
          while IFS= read -r line; do
            echo "   –°—Ç—Ä–æ–∫–∞ $line_number: '$line'"
            line_number=$((line_number + 1))
          done < .env
        fi
        else
          echo "‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        echo "=================================================="
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        echo "üÜï –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
        # –ü—Ä–∏ —Ä—É—á–Ω–æ–º –∑–∞–ø—É—Å–∫–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "üîß –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∂–∏–º"
          python run_game_results_monitor_final.py --force
        else
          echo "‚è∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"
          python run_game_results_monitor_final.py
        fi
        echo "=================================================="
        echo "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
        
    - name: Save game results cache
      uses: actions/cache@v3
      if: always()
      with:
        path: |
          game_results_history.json
          test_game_results_history.json
        key: game-results-${{ github.ref }}
        
    - name: Handle errors
      if: failure()
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
      run: |
        echo "‚ùå GitHub Actions –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ..."
        
        if [ -z "$BOT_TOKEN" ]; then
          echo "‚ö†Ô∏è BOT_TOKEN –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"
          echo "–î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ GitHub Secrets –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö"
        fi
        
        if [ -z "$CHAT_ID" ]; then
          echo "‚ö†Ô∏è CHAT_ID –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"
          echo "–î–æ–±–∞–≤—å—Ç–µ CHAT_ID –≤ GitHub Secrets –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö"
        fi
        
        echo "–û—à–∏–±–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
        
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: game-results-monitor-v2-logs
        path: |
          game_results_history.json
          test_game_results_history.json
          *.log
