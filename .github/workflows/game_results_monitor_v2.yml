name: Game Results Monitor V2

on:
  schedule:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 23:00 MSK (20:00 UTC)
    # –≠—Ç–æ –≤—Ä–µ–º—è –≤—ã–±—Ä–∞–Ω–æ, —á—Ç–æ–±—ã –∏–≥—Ä—ã —Ç–æ—á–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å
    - cron: '0 20 * * *'  # 20:00 UTC = 23:00 MSK
  workflow_dispatch: # –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –≤—Ä—É—á–Ω—É—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

jobs:
  monitor-game-results:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Restore game results cache
      uses: actions/cache@v3
      with:
        path: |
          game_results_history.json
          test_game_results_history.json
        key: game-results-${{ github.ref }}
        restore-keys: |
          game-results-
        
    - name: Check game results files
      run: |
        echo "üîç –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò–ì–†"
        echo "=================================================="
        echo "üìã –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤:"
        ls -la *.json 2>/dev/null || echo "‚ùå JSON —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        echo ""
        echo "üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ game_results_history.json (–µ—Å–ª–∏ –µ—Å—Ç—å):"
        if [ -f "game_results_history.json" ]; then
          cat game_results_history.json
        else
          echo "‚ùå –§–∞–π–ª game_results_history.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
        echo "=================================================="
        
    - name: Initialize game results files
      run: |
        echo "üîß –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –§–ê–ô–õ–û–í –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò–ì–†"
        echo "=================================================="
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        if [ ! -f "game_results_history.json" ]; then
          echo "üìù –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π game_results_history.json"
          echo '{}' > game_results_history.json
        fi
        if [ ! -f "test_game_results_history.json" ]; then
          echo "üìù –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π test_game_results_history.json"
          echo '{}' > test_game_results_history.json
        fi
        echo "‚úÖ –§–∞–π–ª—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã"
        echo "=================================================="
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-telegram-bot gspread google-auth python-dotenv aiohttp beautifulsoup4
        
    - name: Create .env file
      run: |
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> .env
        echo "CHAT_ID=${{ secrets.CHAT_ID }}" >> .env
        echo "ANNOUNCEMENTS_TOPIC_ID=${{ secrets.ANNOUNCEMENTS_TOPIC_ID }}" >> .env
        echo "GOOGLE_SHEETS_CREDENTIALS=${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}" >> .env
        echo "SPREADSHEET_ID=${{ secrets.SPREADSHEET_ID }}" >> .env
        
    - name: Run Game Results Monitor V2
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
        ANNOUNCEMENTS_TOPIC_ID: ${{ secrets.ANNOUNCEMENTS_TOPIC_ID }}
        GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}
      run: |
        echo "üèÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä V2..."
        echo "üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $(date)"
        echo "üìÖ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: $(date +%u)"
        echo "üïê –ß–∞—Å: $(date +%H)"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        if [ -z "$BOT_TOKEN" ]; then
          echo "‚ùå BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
          exit 1
        fi
        if [ -z "$CHAT_ID" ]; then
          echo "‚ùå CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
          exit 1
        fi
        
        echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        echo "üîÑ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
        echo "=================================================="
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        echo "üÜï –ó–∞–ø—É—Å–∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤..."
        python run_game_results_monitor_final.py
        echo "=================================================="
        echo "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"
        
    - name: Save game results cache
      uses: actions/cache@v3
      if: always()
      with:
        path: |
          game_results_history.json
          test_game_results_history.json
        key: game-results-${{ github.ref }}
        
    - name: Handle errors
      if: failure()
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
      run: |
        echo "‚ùå GitHub Actions –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π"
        echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ..."
        
        if [ -z "$BOT_TOKEN" ]; then
          echo "‚ö†Ô∏è BOT_TOKEN –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"
          echo "–î–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ GitHub Secrets –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö"
        fi
        
        if [ -z "$CHAT_ID" ]; then
          echo "‚ö†Ô∏è CHAT_ID –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"
          echo "–î–æ–±–∞–≤—å—Ç–µ CHAT_ID –≤ GitHub Secrets –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö"
        fi
        
        echo "–û—à–∏–±–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç —á–µ—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç"
        
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: game-results-monitor-v2-logs
        path: |
          game_results_history.json
          test_game_results_history.json
          *.log
