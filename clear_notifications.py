#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
"""

import os
import json
from notification_manager import notification_manager

def clear_all_notifications():
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    print("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    # –û—á–∏—â–∞–µ–º –≤ –ø–∞–º—è—Ç–∏
    notification_manager.clear_notifications()
    
    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
    notifications_file = "sent_notifications.json"
    if os.path.exists(notifications_file):
        os.remove(notifications_file)
        print(f"‚úÖ –§–∞–π–ª {notifications_file} —É–¥–∞–ª–µ–Ω")
    
    print("‚úÖ –í—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—á–∏—â–µ–Ω—ã")

def show_notifications():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
    notifications_file = "sent_notifications.json"
    
    if not os.path.exists(notifications_file):
        print("üìä –§–∞–π–ª —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    try:
        with open(notifications_file, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        print("üìä –¢–ï–ö–£–©–ò–ï –û–¢–ü–†–ê–í–õ–ï–ù–ù–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø:")
        print("=" * 50)
        
        game_end = data.get('game_end', [])
        game_start = data.get('game_start', [])
        game_result = data.get('game_result', [])
        morning = data.get('morning', [])
        
        print(f"üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä: {len(game_end)}")
        for notification in game_end:
            print(f"   - {notification}")
        
        print(f"üèÄ –ù–∞—á–∞–ª–æ –∏–≥—Ä: {len(game_start)}")
        for notification in game_start:
            print(f"   - {notification}")
        
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏–≥—Ä: {len(game_result)}")
        for notification in game_result:
            print(f"   - {notification}")
        
        print(f"üåÖ –£—Ç—Ä–µ–Ω–Ω–∏–µ: {len(morning)}")
        for notification in morning:
            print(f"   - {notification}")
        
        total = len(game_end) + len(game_start) + len(game_result) + len(morning)
        print(f"\nüìà –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {total}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        command = sys.argv[1]
        
        if command == "clear":
            clear_all_notifications()
        elif command == "show":
            show_notifications()
        else:
            print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:")
            print("  python clear_notifications.py clear  # –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            print("  python clear_notifications.py show   # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    else:
        print("üßπ –°–ö–†–ò–ü–¢ –û–ß–ò–°–¢–ö–ò –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
        print("=" * 40)
        print()
        show_notifications()
        print()
        print("–î–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("  python clear_notifications.py clear")
