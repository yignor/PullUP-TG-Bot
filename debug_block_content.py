#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –±–ª–æ–∫–∞ –∏–≥—Ä
"""

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def debug_block_content():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–ª–æ–∫–∞ –∏–≥—Ä"""
    url = "http://letobasket.ru/"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    html_content = await response.text()
                    
                    # –ü–∞—Ä—Å–∏–º HTML
                    soup = BeautifulSoup(html_content, 'html.parser')
                    
                    # –ò—â–µ–º –±–ª–æ–∫ –º–µ–∂–¥—É "–¢–ê–ë–õ–û –ò–ì–†" –∏ "online –≤–∏–¥–µ–æ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –∏–≥—Ä –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
                    page_text = soup.get_text()
                    
                    # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ä—ã
                    start_marker = "–¢–ê–ë–õ–û –ò–ì–†"
                    end_marker = "online –≤–∏–¥–µ–æ—Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –∏–≥—Ä –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ"
                    
                    start_index = page_text.find(start_marker)
                    end_index = page_text.find(end_marker)
                    
                    print("üîç –ê–ù–ê–õ–ò–ó –ë–õ–û–ö–ê –ò–ì–†")
                    print("=" * 50)
                    
                    if start_index != -1 and end_index != -1 and start_index < end_index:
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–π –±–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞
                        target_block = page_text[start_index:end_index]
                        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –±–ª–æ–∫ –∏–≥—Ä –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ä–∞–º–∏")
                        print(f"–†–∞–∑–º–µ—Ä –±–ª–æ–∫–∞: {len(target_block)} —Å–∏–º–≤–æ–ª–æ–≤")
                        
                        print(f"\nüìÑ –°–û–î–ï–†–ñ–ò–ú–û–ï –ë–õ–û–ö–ê:")
                        print("-" * 30)
                        print(target_block)
                        
                        print(f"\nüîç –ü–û–ò–°–ö PULLUP:")
                        print("-" * 20)
                        
                        # –ò—â–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ PullUP
                        pullup_patterns = [
                            r'pull\s*up',
                            r'pullup',
                            r'PullUP',
                            r'Pull UP',
                            r'PULL UP',
                            r'pull\s*up\s*—Ñ–∞—Ä–º',
                            r'PullUP\s*—Ñ–∞—Ä–º',
                            r'Pull UP\s*—Ñ–∞—Ä–º',
                            r'PULL UP\s*—Ñ–∞—Ä–º'
                        ]
                        
                        for pattern in pullup_patterns:
                            matches = re.findall(pattern, target_block, re.IGNORECASE)
                            if matches:
                                print(f"‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}': –Ω–∞–π–¥–µ–Ω–æ {len(matches)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
                                for match in matches:
                                    print(f"   - {match}")
                            else:
                                print(f"‚ùå –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}': –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                        
                        # –ò—â–µ–º –ª—é–±—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è pull
                        print(f"\nüîç –ü–û–ò–°–ö –õ–Æ–ë–´–• –£–ü–û–ú–ò–ù–ê–ù–ò–ô PULL:")
                        print("-" * 35)
                        pull_matches = re.findall(r'pull', target_block, re.IGNORECASE)
                        if pull_matches:
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(pull_matches)} —É–ø–æ–º–∏–Ω–∞–Ω–∏–π 'pull'")
                        else:
                            print(f"‚ùå –£–ø–æ–º–∏–Ω–∞–Ω–∏—è 'pull' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        
                        # –ò—â–µ–º –ª—é–±—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è up
                        print(f"\nüîç –ü–û–ò–°–ö –õ–Æ–ë–´–• –£–ü–û–ú–ò–ù–ê–ù–ò–ô UP:")
                        print("-" * 30)
                        up_matches = re.findall(r'\bup\b', target_block, re.IGNORECASE)
                        if up_matches:
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(up_matches)} —É–ø–æ–º–∏–Ω–∞–Ω–∏–π 'up'")
                        else:
                            print(f"‚ùå –£–ø–æ–º–∏–Ω–∞–Ω–∏—è 'up' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        
                    else:
                        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –æ–∂–∏–¥–∞–µ–º—ã–µ –º–∞—Ä–∫–µ—Ä—ã")
                        print(f"start_marker –ø–æ–∑–∏—Ü–∏—è: {start_index}")
                        print(f"end_marker –ø–æ–∑–∏—Ü–∏—è: {end_index}")
                        
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_block_content())
