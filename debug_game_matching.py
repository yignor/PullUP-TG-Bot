import asyncio
import aiohttp
import re

async def debug_game_matching():
    url = "http://letobasket.ru/"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            html_content = await response.text()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ HTML
    from bs4 import BeautifulSoup
    soup = BeautifulSoup(html_content, 'html.parser')
    page_text = soup.get_text()
    
    print("=== –ê–ù–ê–õ–ò–ó –°–û–í–ü–ê–î–ï–ù–ò–Ø –ò–ì–† ===")
    
    # –ò—â–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    date_pattern = r'(\d{2}\.\d{2}\.\d{4})'
    date_match = re.search(date_pattern, page_text)
    if date_match:
        current_date = date_match.group(1)
        print(f"üìÖ –ù–∞–π–¥–µ–Ω–∞ –¥–∞—Ç–∞: {current_date}")
    else:
        print("‚ùå –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ò—â–µ–º –≤—Å–µ –∏–≥—Ä—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    all_games = re.findall(rf'{current_date}\s+\d{{2}}\.\d{{2}}[^-]*-\s*[^-]+[^-]*-\s*[^-]+', page_text)
    
    print(f"\n–í—Å–µ –∏–≥—Ä—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:")
    for i, game in enumerate(all_games):
        print(f"  {i+1}. '{game}'")
    
    # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∏–≥—Ä—É PullUP
    target_game = {"time": "12.30", "team1": "IT Basket", "team2": "Pull Up-–§–∞—Ä–º"}
    game_pattern = rf'{current_date}\s+{target_game["time"]}[^-]*-\s*{re.escape(target_game["team1"])}[^-]*-\s*{re.escape(target_game["team2"])}'
    text_match = re.search(game_pattern, page_text, re.IGNORECASE)
    
    if text_match:
        current_game_text = text_match.group(0)
        print(f"\nüéØ –ù–∞–π–¥–µ–Ω–Ω–∞—è –∏–≥—Ä–∞ PullUP: '{current_game_text}'")
        
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        for i, game in enumerate(all_games):
            print(f"\n–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∏–≥—Ä–æ–π {i+1}:")
            print(f"  –ò–≥—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ: '{game}'")
            print(f"  –ò–≥—Ä–∞ PullUP:   '{current_game_text}'")
            print(f"  –¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {game.strip() == current_game_text.strip()}")
            print(f"  –ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤: {game.replace(' ', '').lower() == current_game_text.replace(' ', '').lower()}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∏–≥—Ä–∞ –Ω—É–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
            has_time = target_game["time"] in game
            has_team1 = target_game["team1"] in game
            has_team2 = target_game["team2"] in game
            print(f"  –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–º—è '{target_game['time']}': {has_time}")
            print(f"  –°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥—É1 '{target_game['team1']}': {has_team1}")
            print(f"  –°–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–º–∞–Ω–¥—É2 '{target_game['team2']}': {has_team2}")
            
            if has_time and has_team1 and has_team2:
                print(f"  ‚úÖ –ü–û–õ–ù–û–ï –°–û–í–ü–ê–î–ï–ù–ò–ï! –ü–æ–∑–∏—Ü–∏—è: {i+1}")
                break
    else:
        print("‚ùå –ò–≥—Ä–∞ PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

if __name__ == "__main__":
    asyncio.run(debug_game_matching())
