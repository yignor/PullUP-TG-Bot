#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∏–≥—Ä –∏ –ø–æ–∏—Å–∫–∞ PullUP
"""

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re
from letobasket_monitor import extract_game_links_from_soup, parse_game_info, team_matches_targets, get_target_team_names

async def debug_specific_games():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–≥—Ä—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ PullUP"""
    url = "http://letobasket.ru/"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    html_content = await response.text()
                    soup = BeautifulSoup(html_content, 'html.parser')
                    
                    print("üîç –û–¢–õ–ê–î–ö–ê –ö–û–ù–ö–†–ï–¢–ù–´–• –ò–ì–†")
                    print("=" * 50)
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–≥—Ä—ã
                    game_links = extract_game_links_from_soup(soup, url, max_links=50)
                    print(f"üîó –ù–∞–π–¥–µ–Ω–æ {len(game_links)} —Å—Å—ã–ª–æ–∫ –Ω–∞ –∏–≥—Ä—ã")
                    
                    # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–ª–µ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã
                    targets = get_target_team_names()
                    print(f"üéØ –¶–µ–ª–µ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã: {targets}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ 10 –∏–≥—Ä
                    checked_games = 0
                    found_pullup_games = []
                    
                    for i, game_url in enumerate(game_links[:10], 1):
                        print(f"\nüéÆ –ü—Ä–æ–≤–µ—Ä—è—é –∏–≥—Ä—É {i}: {game_url}")
                        
                        try:
                            game_info = await parse_game_info(game_url)
                            if game_info:
                                team1 = game_info.get('team1', '')
                                team2 = game_info.get('team2', '')
                                game_time = game_info.get('time', '')
                                
                                print(f"   –ö–æ–º–∞–Ω–¥–∞ 1: {team1}")
                                print(f"   –ö–æ–º–∞–Ω–¥–∞ 2: {team2}")
                                print(f"   –í—Ä–µ–º—è: {game_time}")
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ PullUP
                                if team_matches_targets(team1, targets) or team_matches_targets(team2, targets):
                                    print(f"   ‚úÖ –ù–ê–ô–î–ï–ù–ê –ò–ì–†–ê PULLUP!")
                                    found_pullup_games.append((game_url, game_info))
                                else:
                                    print(f"   ‚ùå PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω")
                                
                                checked_games += 1
                            else:
                                print(f"   ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–µ")
                                
                        except Exception as e:
                            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–≥—Ä—ã: {e}")
                    
                    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
                    print(f"   –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –∏–≥—Ä: {checked_games}")
                    print(f"   –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä —Å PullUP: {len(found_pullup_games)}")
                    
                    if found_pullup_games:
                        print(f"\nüèÄ –ù–ê–ô–î–ï–ù–ù–´–ï –ò–ì–†–´ PULLUP:")
                        for i, (game_url, game_info) in enumerate(found_pullup_games, 1):
                            team1 = game_info.get('team1', '–ö–æ–º–∞–Ω–¥–∞ 1')
                            team2 = game_info.get('team2', '–ö–æ–º–∞–Ω–¥–∞ 2')
                            game_time = game_info.get('time', '–í—Ä–µ–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ')
                            print(f"   {i}. {team1} vs {team2} - {game_time}")
                            print(f"      –°—Å—ã–ª–∫–∞: {game_url}")
                    else:
                        print(f"\n‚ùå –ò–≥—Ä—ã —Å PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                        
                        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
                        print(f"\nüîç –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã –≤ –ø–µ—Ä–≤—ã—Ö 5 –∏–≥—Ä–∞—Ö
                        for i, game_url in enumerate(game_links[:5], 1):
                            try:
                                game_info = await parse_game_info(game_url)
                                if game_info:
                                    team1 = game_info.get('team1', '')
                                    team2 = game_info.get('team2', '')
                                    print(f"   –ò–≥—Ä–∞ {i}: '{team1}' vs '{team2}'")
                                    
                                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –∫–æ–º–∞–Ω–¥—É –æ—Ç–¥–µ–ª—å–Ω–æ
                                    for target in targets:
                                        if team_matches_targets(team1, [target]):
                                            print(f"      ‚úÖ {team1} —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç {target}")
                                        if team_matches_targets(team2, [target]):
                                            print(f"      ‚úÖ {team2} —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç {target}")
                            except:
                                pass
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_specific_games())
