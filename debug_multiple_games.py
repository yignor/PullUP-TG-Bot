#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–≥—Ä –∏ –ø–æ–∏—Å–∫–∞ PullUP
"""

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def debug_multiple_games():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–≥—Ä –Ω–∞ –Ω–∞–ª–∏—á–∏–µ PullUP"""
    base_url = "http://letobasket.ru/"
    
    # –°–ø–∏—Å–æ–∫ –∏–≥—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    game_urls = [
        "http://letobasket.ru/P2025/podrobno.php?id=228&id1=S",
        "http://letobasket.ru/P2025/podrobno.php?id=227&id1=S", 
        "http://letobasket.ru/P2025/podrobno.php?id=226&id1=S",
        "http://letobasket.ru/P2025/podrobno.php?id=225&id1=S",
        "http://letobasket.ru/P2025/podrobno.php?id=224&id1=S",
    ]
    
    try:
        async with aiohttp.ClientSession() as session:
            for i, game_url in enumerate(game_urls, 1):
                print(f"\nüéÆ –ü–†–û–í–ï–†–Ø–Æ –ò–ì–†–£ {i}: {game_url}")
                print("-" * 60)
                
                try:
                    async with session.get(game_url) as response:
                        if response.status == 200:
                            # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                            html_content = await response.read()
                            
                            # –ü—ã—Ç–∞–µ–º—Å—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                            try:
                                html_text = html_content.decode('utf-8')
                            except UnicodeDecodeError:
                                try:
                                    html_text = html_content.decode('windows-1251')
                                except UnicodeDecodeError:
                                    html_text = html_content.decode('cp1251')
                            
                            # –ü–∞—Ä—Å–∏–º HTML
                            soup = BeautifulSoup(html_text, 'html.parser')
                            page_text = soup.get_text()
                            
                            print(f"–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞: {len(page_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                            
                            # –ò—â–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ
                            team_patterns = [
                                r'([–ê-–Ø][–∞-—è\s]+)\s+[-‚Äî]\s+([–ê-–Ø][–∞-—è\s]+)',
                                r'([–ê-–Ø][–∞-—è\s]+)\s+vs\s+([–ê-–Ø][–∞-—è\s]+)',
                                r'([–ê-–Ø][–∞-—è\s]+)\s+–ø—Ä–æ—Ç–∏–≤\s+([–ê-–Ø][–∞-—è\s]+)',
                            ]
                            
                            found_teams = []
                            for pattern in team_patterns:
                                matches = re.findall(pattern, page_text)
                                if matches:
                                    for match in matches:
                                        team1 = match[0].strip()
                                        team2 = match[1].strip()
                                        found_teams.append((team1, team2))
                            
                            if found_teams:
                                print("üèÄ –ù–ê–ô–î–ï–ù–ù–´–ï –ö–û–ú–ê–ù–î–´:")
                                for team1, team2 in found_teams:
                                    print(f"   {team1} vs {team2}")
                                    
                                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ PullUP
                                    if 'pull' in team1.lower() and 'up' in team1.lower():
                                        print(f"   ‚úÖ PULLUP –ù–ê–ô–î–ï–ù –í –ö–û–ú–ê–ù–î–ï 1: {team1}")
                                    if 'pull' in team2.lower() and 'up' in team2.lower():
                                        print(f"   ‚úÖ PULLUP –ù–ê–ô–î–ï–ù –í –ö–û–ú–ê–ù–î–ï 2: {team2}")
                            else:
                                print("‚ùå –ö–æ–º–∞–Ω–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                            
                            # –ò—â–µ–º –≤—Ä–µ–º—è
                            time_match = re.search(r'(\d{1,2}[./]\d{1,2}[./]\d{2,4})', page_text)
                            if time_match:
                                print(f"üìÖ –î–∞—Ç–∞: {time_match.group(1)}")
                            
                            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤
                            print(f"üìÑ –ù–∞—á–∞–ª–æ —Ç–µ–∫—Å—Ç–∞: {page_text[:200]}...")
                            
                        else:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status}")
                            
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–≥—Ä—ã: {e}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_multiple_games())
