#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞
"""

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def debug_new_approach():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –ø–æ–¥—Ö–æ–¥ –ø–æ–∏—Å–∫–∞"""
    url = "http://letobasket.ru/"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    html_content = await response.text()
                    
                    # –ü–∞—Ä—Å–∏–º HTML
                    soup = BeautifulSoup(html_content, 'html.parser')
                    
                    # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    page_text = soup.get_text()
                    
                    print("üîç –ù–û–í–´–ô –ü–û–î–•–û–î –ü–û–ò–°–ö–ê")
                    print("=" * 50)
                    
                    # –ò—â–µ–º –¥–∞—Ç—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                    date_match = re.search(r'(\d{1,2}[./]\d{1,2}[./]\d{2,4})', page_text)
                    current_date = date_match.group(1) if date_match else None
                    print(f"üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}")
                    
                    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å PullUP –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π
                    pullup_patterns = [
                        r'PULL UP –§–ê–†–ú',
                        r'PULL UP-–§–ê–†–ú',
                        r'Pull Up-–§–∞—Ä–º',
                        r'pull up-—Ñ–∞—Ä–º',
                        r'PULL UP',
                        r'Pull Up',
                        r'pull up',
                        r'PullUP –§–∞—Ä–º',
                        r'PullUP'
                    ]
                    
                    for pattern in pullup_patterns:
                        print(f"\nüîç –ü–æ–∏—Å–∫ –ø–∞—Ç—Ç–µ—Ä–Ω–∞: {pattern}")
                        
                        # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ PullUP –∏ –¥–∞—Ç—É
                        pullup_lines = re.findall(rf'{current_date}[^-\n]*-\s*[^-]*{pattern}[^-]*', page_text, re.IGNORECASE)
                        
                        print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(pullup_lines)}")
                        
                        for line in pullup_lines:
                            print(f"   üîç –ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞: {line}")
                            
                            # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è –∏–∑ —Å—Ç—Ä–æ–∫–∏
                            time_match = re.search(rf'{current_date}\s+(\d{{1,2}}[:.]\d{{2}})', line)
                            game_time = time_match.group(1) if time_match else None
                            print(f"      –í—Ä–µ–º—è: {game_time}")
                            
                            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏
                            teams_match = re.search(r'-\s*([^-]+?)\s*-\s*([^-]+?)(?:\s|$)', line)
                            if teams_match:
                                team1 = teams_match.group(1).strip()
                                team2 = teams_match.group(2).strip()
                                print(f"      –ö–æ–º–∞–Ω–¥–∞ 1: {team1}")
                                print(f"      –ö–æ–º–∞–Ω–¥–∞ 2: {team2}")
                                
                                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∞—è –∫–æ–º–∞–Ω–¥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç PullUP
                                if re.search(pattern, team1, re.IGNORECASE):
                                    print(f"      ‚úÖ PullUP –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–º–∞–Ω–¥–µ 1")
                                elif re.search(pattern, team2, re.IGNORECASE):
                                    print(f"      ‚úÖ PullUP –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–º–∞–Ω–¥–µ 2")
                                else:
                                    print(f"      ‚ùå PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–º–∞–Ω–¥–∞—Ö")
                            else:
                                print(f"      ‚ùå –ö–æ–º–∞–Ω–¥—ã –Ω–µ –∏–∑–≤–ª–µ—á–µ–Ω—ã")
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_new_approach())
