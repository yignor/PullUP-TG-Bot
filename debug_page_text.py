import asyncio
import aiohttp
import re

async def debug_page_text():
    url = "http://letobasket.ru/"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            html_content = await response.text()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ HTML
    from bs4 import BeautifulSoup
    soup = BeautifulSoup(html_content, 'html.parser')
    page_text = soup.get_text()
    
    print("=== –ê–ù–ê–õ–ò–ó –¢–ï–ö–°–¢–ê –°–¢–†–ê–ù–ò–¶–´ ===")
    
    # –ò—â–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    date_pattern = r'(\d{2}\.\d{2}\.\d{4})'
    date_match = re.search(date_pattern, page_text)
    if date_match:
        current_date = date_match.group(1)
        print(f"üìÖ –ù–∞–π–¥–µ–Ω–∞ –¥–∞—Ç–∞: {current_date}")
    else:
        print("‚ùå –î–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ò—â–µ–º –∏–≥—Ä—ã PullUP
    pullup_games = [
        {"time": "12.30", "team1": "IT Basket", "team2": "Pull Up-–§–∞—Ä–º"},
        {"time": "14.00", "team1": "–ú–∞–∏–ª–µ –ö–∞—Ä–≥–æ", "team2": "Pull Up"}
    ]
    
    print(f"\n=== –ü–û–ò–°–ö –ò–ì–† PULLUP ===")
    
    for i, game in enumerate(pullup_games):
        print(f"\n--- –ò–≥—Ä–∞ {i+1}: {game['time']} {game['team1']} vs {game['team2']} ---")
        
        # –ò—â–µ–º —ç—Ç—É –∏–≥—Ä—É –≤ —Ç–µ–∫—Å—Ç–µ
        game_pattern = rf'{current_date}\s+{game["time"]}[^-]*-\s*{re.escape(game["team1"])}[^-]*-\s*{re.escape(game["team2"])}'
        match = re.search(game_pattern, page_text, re.IGNORECASE)
        
        if match:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∏–≥—Ä–∞: {match.group(0)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–æ–∫—Ä—É–≥ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∏–≥—Ä—ã
            start_pos = max(0, match.start() - 100)
            end_pos = min(len(page_text), match.end() + 100)
            context = page_text[start_pos:end_pos]
            print(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}")
        else:
            print("‚ùå –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–∞—Å—Ç–∏—á–Ω–æ
            print("üîç –ü–æ–∏—Å–∫ —á–∞—Å—Ç–∏—á–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π:")
            
            # –ò—â–µ–º –≤—Ä–µ–º—è
            time_pattern = rf'{current_date}\s+{game["time"]}'
            time_match = re.search(time_pattern, page_text)
            if time_match:
                print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤—Ä–µ–º—è: {time_match.group(0)}")
            
            # –ò—â–µ–º –∫–æ–º–∞–Ω–¥—ã
            for team in [game["team1"], game["team2"]]:
                team_match = re.search(re.escape(team), page_text, re.IGNORECASE)
                if team_match:
                    print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {team}")
                else:
                    print(f"  ‚ùå –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {team}")

if __name__ == "__main__":
    asyncio.run(debug_page_text())
