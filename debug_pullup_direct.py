#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä—è–º–æ–≥–æ –ø–æ–∏—Å–∫–∞ PullUP
"""

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def debug_pullup_direct():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø—Ä—è–º–æ–π –ø–æ–∏—Å–∫ PullUP"""
    url = "http://letobasket.ru/"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    html_content = await response.text()
                    
                    # –ü–∞—Ä—Å–∏–º HTML
                    soup = BeautifulSoup(html_content, 'html.parser')
                    
                    # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                    page_text = soup.get_text()
                    
                    print("üîç –ü–†–Ø–ú–û–ô –ü–û–ò–°–ö PULLUP")
                    print("=" * 50)
                    
                    # –ò—â–µ–º –¥–∞—Ç—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                    date_match = re.search(r'(\d{1,2}[./]\d{1,2}[./]\d{2,4})', page_text)
                    current_date = date_match.group(1) if date_match else None
                    print(f"üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}")
                    
                    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å PullUP –∏ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –Ω–∞–ø—Ä—è–º—É—é
                    pullup_date_pattern = rf'{current_date}[^-]*-\s*([^-]+?)\s*-\s*([^-]+?)(?:\s|$)'
                    pullup_matches = re.findall(pullup_date_pattern, page_text, re.IGNORECASE)
                    
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫ —Å –¥–∞—Ç–æ–π {current_date}: {len(pullup_matches)}")
                    
                    for i, match in enumerate(pullup_matches, 1):
                        team1 = match[0].strip()
                        team2 = match[1].strip()
                        
                        print(f"\nüéÆ –°—Ç—Ä–æ–∫–∞ {i}:")
                        print(f"   üèÄ –ö–æ–º–∞–Ω–¥–∞ 1: {team1}")
                        print(f"   üèÄ –ö–æ–º–∞–Ω–¥–∞ 2: {team2}")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ PullUP
                        pullup_patterns = [
                            r'PULL UP –§–ê–†–ú',
                            r'PULL UP-–§–ê–†–ú',
                            r'Pull Up-–§–∞—Ä–º',
                            r'pull up-—Ñ–∞—Ä–º',
                            r'PULL UP',
                            r'Pull Up',
                            r'pull up',
                            r'PullUP –§–∞—Ä–º',
                            r'PullUP'
                        ]
                        
                        pullup_found = False
                        for pattern in pullup_patterns:
                            if re.search(pattern, team1, re.IGNORECASE) or re.search(pattern, team2, re.IGNORECASE):
                                pullup_found = True
                                print(f"   ‚úÖ –ù–ê–ô–î–ï–ù PULLUP!")
                                break
                        
                        if not pullup_found:
                            print(f"   ‚ùå PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
                    # –¢–∞–∫–∂–µ –ø–æ–∫–∞–∂–µ–º –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ —Å PullUP
                    print(f"\nüìã –í–°–ï –°–¢–†–û–ö–ò –° PULLUP:")
                    pullup_lines = re.findall(r'[^-\n]*pull[^-\n]*up[^-\n]*', page_text, re.IGNORECASE)
                    for line in pullup_lines:
                        print(f"   - {line.strip()}")
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_pullup_direct())
