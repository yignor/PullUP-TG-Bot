#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ–¥–Ω–æ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–≥—Ä—ã
"""

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def debug_single_game():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–¥–Ω—É –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –∏–≥—Ä—É"""
    game_url = "http://letobasket.ru/P2025/podrobno.php?id=228&id1=S"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(game_url) as response:
                if response.status == 200:
                    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                    html_content = await response.read()
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
                    try:
                        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º UTF-8
                        html_text = html_content.decode('utf-8')
                    except UnicodeDecodeError:
                        try:
                            # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º Windows-1251
                            html_text = html_content.decode('windows-1251')
                        except UnicodeDecodeError:
                            # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - cp1251
                            html_text = html_content.decode('cp1251')
                    
                    # –ü–∞—Ä—Å–∏–º HTML
                    soup = BeautifulSoup(html_text, 'html.parser')
                    
                    print("üîç –ê–ù–ê–õ–ò–ó –û–î–ù–û–ô –ò–ì–†–´")
                    print("=" * 40)
                    print(f"URL: {game_url}")
                    print(f"–†–∞–∑–º–µ—Ä HTML: {len(html_content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    
                    # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç
                    page_text = soup.get_text()
                    print(f"–†–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞: {len(page_text)} —Å–∏–º–≤–æ–ª–æ–≤")
                    
                    # –ò—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
                    print(f"\nüîç –ü–û–ò–°–ö –ö–õ–Æ–ß–ï–í–´–• –≠–õ–ï–ú–ï–ù–¢–û–í:")
                    
                    # 1. –ò—â–µ–º el-tournament-head
                    head_block = soup.find('div', class_='el-tournament-head')
                    if head_block:
                        head_text = head_block.get_text(separator=' ', strip=True)
                        print(f"‚úÖ el-tournament-head –Ω–∞–π–¥–µ–Ω: {head_text[:200]}...")
                    else:
                        print(f"‚ùå el-tournament-head –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
                    # 2. –ò—â–µ–º left/right –±–ª–æ–∫–∏
                    left_block = soup.find('div', class_='left')
                    right_block = soup.find('div', class_='right')
                    
                    if left_block:
                        left_text = left_block.get_text(separator=' ', strip=True)
                        print(f"‚úÖ left –±–ª–æ–∫ –Ω–∞–π–¥–µ–Ω: {left_text[:200]}...")
                    else:
                        print(f"‚ùå left –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
                    if right_block:
                        right_text = right_block.get_text(separator=' ', strip=True)
                        print(f"‚úÖ right –±–ª–æ–∫ –Ω–∞–π–¥–µ–Ω: {right_text[:200]}...")
                    else:
                        print(f"‚ùå right –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    
                    # 3. –ò—â–µ–º comman/name –±–ª–æ–∫–∏
                    comman_blocks = soup.find_all('div', class_='comman')
                    name_blocks = soup.find_all('div', class_='name')
                    
                    print(f"‚úÖ comman –±–ª–æ–∫–æ–≤: {len(comman_blocks)}")
                    print(f"‚úÖ name –±–ª–æ–∫–æ–≤: {len(name_blocks)}")
                    
                    for i, comman in enumerate(comman_blocks[:3], 1):
                        comman_text = comman.get_text(strip=True)
                        print(f"   {i}. comman: {comman_text}")
                    
                    for i, name in enumerate(name_blocks[:3], 1):
                        name_text = name.get_text(strip=True)
                        print(f"   {i}. name: {name_text}")
                    
                    # 4. –ò—â–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ
                    print(f"\nüèÄ –ü–û–ò–°–ö –ö–û–ú–ê–ù–î –í –¢–ï–ö–°–¢–ï:")
                    
                    # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –∫–æ–º–∞–Ω–¥
                    team_patterns = [
                        r'([–ê-–Ø][–∞-—è\s]+)\s+[-‚Äî]\s+([–ê-–Ø][–∞-—è\s]+)',
                        r'([–ê-–Ø][–∞-—è\s]+)\s+vs\s+([–ê-–Ø][–∞-—è\s]+)',
                        r'([–ê-–Ø][–∞-—è\s]+)\s+–ø—Ä–æ—Ç–∏–≤\s+([–ê-–Ø][–∞-—è\s]+)',
                    ]
                    
                    for pattern in team_patterns:
                        matches = re.findall(pattern, page_text)
                        if matches:
                            print(f"   ‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}': –Ω–∞–π–¥–µ–Ω–æ {len(matches)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
                            for match in matches[:3]:
                                print(f"      {match[0].strip()} vs {match[1].strip()}")
                        else:
                            print(f"   ‚ùå –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}': –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    
                    # 5. –ò—â–µ–º –≤—Ä–µ–º—è
                    print(f"\nüïê –ü–û–ò–°–ö –í–†–ï–ú–ï–ù–ò:")
                    time_patterns = [
                        r'\d{1,2}[:.]\d{2}',
                        r'\d{1,2}[./]\d{1,2}[./]\d{2,4}',
                        r'\d{1,2}\s+(—è–Ω–≤–∞—Ä—è|—Ñ–µ–≤—Ä–∞–ª—è|–º–∞—Ä—Ç–∞|–∞–ø—Ä–µ–ª—è|–º–∞—è|–∏—é–Ω—è|–∏—é–ª—è|–∞–≤–≥—É—Å—Ç–∞|—Å–µ–Ω—Ç—è–±—Ä—è|–æ–∫—Ç—è–±—Ä—è|–Ω–æ—è–±—Ä—è|–¥–µ–∫–∞–±—Ä—è)',
                    ]
                    
                    for pattern in time_patterns:
                        matches = re.findall(pattern, page_text)
                        if matches:
                            print(f"   ‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}': –Ω–∞–π–¥–µ–Ω–æ {len(matches)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
                            for match in matches[:3]:
                                print(f"      {match}")
                        else:
                            print(f"   ‚ùå –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}': –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                    
                    # 6. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞
                    print(f"\nüìÑ –ü–ï–†–í–´–ï 500 –°–ò–ú–í–û–õ–û–í –¢–ï–ö–°–¢–ê:")
                    print(page_text[:500])
                    
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {response.status}")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_single_game())
