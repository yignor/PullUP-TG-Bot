#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ .env —Ñ–∞–π–ª–∞
"""

import os
import json
import shutil
from datetime import datetime

def fix_env_format():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç .env —Ñ–∞–π–ª–∞"""
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_name = f".env.backup.{datetime.now().strftime('%Y%m%d_%H%M%S')}"
    shutil.copy2('.env', backup_name)
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_name}")
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π .env —Ñ–∞–π–ª
    with open('.env', 'r', encoding='utf-8') as f:
        content = f.read()
    
    print("üìÑ –¢–µ–∫—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞:")
    print("=" * 50)
    print(content)
    print("=" * 50)
    
    # –ü–∞—Ä—Å–∏–º —Å—Ç—Ä–æ–∫–∏
    lines = content.split('\n')
    new_lines = []
    
    for i, line in enumerate(lines, 1):
        if line.strip().startswith('GOOGLE_SHEETS_CREDENTIALS='):
            print(f"üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É {i}: GOOGLE_SHEETS_CREDENTIALS")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON —á–∞—Å—Ç—å
            json_start = line.find('{')
            if json_start != -1:
                json_part = line[json_start:]
                
                try:
                    # –ü–∞—Ä—Å–∏–º JSON –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
                    creds_dict = json.loads(json_part)
                    print("‚úÖ JSON –≤–∞–ª–∏–¥–Ω—ã–π")
                    
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
                    # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –Ω–∞ \n
                    escaped_json = json_part.replace('\n', '\\n')
                    new_line = f"GOOGLE_SHEETS_CREDENTIALS={escaped_json}"
                    new_lines.append(new_line)
                    print("‚úÖ JSON –ø—Ä–∞–≤–∏–ª—å–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω")
                    
                except json.JSONDecodeError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: {e}")
                    new_lines.append(line)  # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å
            else:
                print(f"‚ùå JSON –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–æ–∫–µ {i}")
                new_lines.append(line)
        else:
            new_lines.append(line)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open('.env', 'w', encoding='utf-8') as f:
        f.write('\n'.join(new_lines))
    
    print("\n‚úÖ .env —Ñ–∞–π–ª –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å
    try:
        from dotenv import load_dotenv
        load_dotenv()
        
        bot_token = os.getenv("BOT_TOKEN")
        chat_id = os.getenv("CHAT_ID")
        google_credentials = os.getenv("GOOGLE_SHEETS_CREDENTIALS")
        spreadsheet_id = os.getenv("SPREADSHEET_ID")
        
        print("\nüîç –ü–†–û–í–ï–†–ö–ê –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø:")
        print(f"BOT_TOKEN: {'‚úÖ' if bot_token else '‚ùå'}")
        print(f"CHAT_ID: {'‚úÖ' if chat_id else '‚ùå'}")
        print(f"GOOGLE_SHEETS_CREDENTIALS: {'‚úÖ' if google_credentials else '‚ùå'}")
        print(f"SPREADSHEET_ID: {'‚úÖ' if spreadsheet_id else '‚ùå'}")
        
        if google_credentials:
            try:
                creds_dict = json.loads(google_credentials)
                print("‚úÖ JSON –≤ GOOGLE_SHEETS_CREDENTIALS –≤–∞–ª–∏–¥–Ω—ã–π")
            except json.JSONDecodeError as e:
                print(f"‚ùå JSON –≤ GOOGLE_SHEETS_CREDENTIALS –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π: {e}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        return False

def main():
    print("üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –§–û–†–ú–ê–¢–ê .ENV –§–ê–ô–õ–ê")
    print("=" * 50)
    
    success = fix_env_format()
    
    if success:
        print("\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏")

if __name__ == "__main__":
    main()
