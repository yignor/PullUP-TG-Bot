#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ GitHub Actions —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –æ—à–∏–±–æ–∫ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç
"""

import asyncio
import os
import sys
import traceback
from datetime import datetime
from dotenv import load_dotenv
from telegram import Bot
from bs4 import BeautifulSoup
from pullup_notifications import PullUPNotificationManager

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–∞—Ç–æ–≤
BOT_TOKEN = os.getenv('BOT_TOKEN', '7772125141:AAHqFYGm3I6MW516aCq3K0FFjK2EGKk0wtw')
PROD_CHAT_ID = os.getenv('CHAT_ID', '-1001535261616')
TEST_CHAT_ID = os.getenv('TEST_CHAT_ID', '-15573582')

async def send_error_notification(error_message, bot):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç"""
    try:
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        error_text = f"‚ùå –û–®–ò–ë–ö–ê –í GITHUB ACTIONS\n\n‚è∞ –í—Ä–µ–º—è: {timestamp}\n\nüîç –û—à–∏–±–∫–∞:\n{error_message}"
        
        await bot.send_message(chat_id=TEST_CHAT_ID, text=error_text)
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")

async def send_start_notification(bot):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç"""
    try:
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        start_text = f"üöÄ GITHUB ACTIONS –ó–ê–ü–£–©–ï–ù\n\n‚è∞ –í—Ä–µ–º—è: {timestamp}\nüè≠ –ü—Ä–æ–¥–∞–∫—à–Ω —á–∞—Ç: {PROD_CHAT_ID}\nüß™ –¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç: {TEST_CHAT_ID}"
        
        await bot.send_message(chat_id=TEST_CHAT_ID, text=start_text)
        print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è GitHub Actions"""
    print("üöÄ –ó–∞–ø—É—Å–∫ GitHub Actions –º–æ–Ω–∏—Ç–æ—Ä–∞...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
        bot = Bot(token=BOT_TOKEN)
        print(f"‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        print(f"üè≠ –ü—Ä–æ–¥–∞–∫—à–Ω —á–∞—Ç: {PROD_CHAT_ID}")
        print(f"üß™ –¢–µ—Å—Ç–æ–≤—ã–π —á–∞—Ç: {TEST_CHAT_ID}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ
        await send_start_notification(bot)
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        manager = PullUPNotificationManager()
        print("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        print("\n1. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞...")
        html_content = await manager.get_fresh_page_content()
        soup = BeautifulSoup(html_content, 'html.parser')
        page_text = soup.get_text()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        current_date = manager.extract_current_date(page_text)
        if not current_date:
            error_msg = "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É"
            await send_error_notification(error_msg, bot)
            return
        
        print(f"‚úÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –∏–≥—Ä—ã
        print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä...")
        pullup_games = manager.find_pullup_games(page_text, current_date)
        
        if pullup_games:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(pullup_games)} –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä")
            try:
                await manager.send_morning_notification(pullup_games, html_content)
                print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            except Exception as e:
                error_msg = f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä–∞—Ö: {str(e)}\n–ò–≥—Ä—ã: {pullup_games}"
                await send_error_notification(error_msg, bot)
        else:
            print("‚ÑπÔ∏è –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä...")
        finished_games = manager.check_finished_games(html_content, current_date)
        
        if finished_games:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(finished_games)} –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä")
            for game in finished_games:
                try:
                    await manager.send_finish_notification(game)
                    print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –∏–≥—Ä–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
                except Exception as e:
                    error_msg = f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –∏–≥—Ä–µ: {str(e)}\n–ò–≥—Ä–∞: {game}"
                    await send_error_notification(error_msg, bot)
        else:
            print("‚ÑπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        success_text = f"‚úÖ GITHUB ACTIONS –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û\n\n‚è∞ –í—Ä–µ–º—è: {timestamp}\nüìä –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö –∏–≥—Ä: {len(pullup_games) if pullup_games else 0}\nüèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä: {len(finished_games) if finished_games else 0}"
        
        await bot.send_message(chat_id=TEST_CHAT_ID, text=success_text)
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
    except Exception as e:
        error_message = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ GitHub Actions:\n{str(e)}\n\n–ü–æ–ª–Ω–∞—è —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞:\n{traceback.format_exc()}"
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        
        try:
            await send_error_notification(error_message, bot)
        except Exception as send_error:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {send_error}")
        
        # –í—ã—Ö–æ–¥–∏–º —Å –æ—à–∏–±–∫–æ–π –¥–ª—è GitHub Actions
        sys.exit(1)

if __name__ == "__main__":
    asyncio.run(main())
