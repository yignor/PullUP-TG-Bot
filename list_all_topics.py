#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–æ–ø–∏–∫–æ–≤ –≤ —á–∞—Ç–µ
"""

import os
import asyncio
import aiohttp
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def get_all_topics():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–æ–ø–∏–∫–æ–≤ –≤ —á–∞—Ç–µ"""
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = os.getenv('CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return
    
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–æ–ø–∏–∫–æ–≤...")
    print(f"üìã Chat ID: {chat_id}")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Ç–æ–¥–æ–≤ API
    methods = [
        "getForumTopics",
        "getChat",
        "getChatMember"
    ]
    
    for method in methods:
        print(f"\nüì° –ü—Ä–æ–±—É—é –º–µ—Ç–æ–¥: {method}")
        
        url = f"https://api.telegram.org/bot{bot_token}/{method}"
        
        if method == "getForumTopics":
            data = {"chat_id": chat_id}
        elif method == "getChat":
            data = {"chat_id": chat_id}
        elif method == "getChatMember":
            data = {"chat_id": chat_id, "user_id": bot_token.split(':')[0]}
        
        async with aiohttp.ClientSession() as session:
            async with session.post(url, json=data) as response:
                result = await response.json()
                
                if result.get("ok"):
                    print(f"‚úÖ –ú–µ—Ç–æ–¥ {method} —Ä–∞–±–æ—Ç–∞–µ—Ç")
                    
                    if method == "getForumTopics":
                        topics = result.get("result", [])
                        print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Ç–æ–ø–∏–∫–æ–≤: {len(topics)}")
                        
                        for i, topic in enumerate(topics):
                            name = topic.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                            topic_id = topic.get('message_thread_id')
                            print(f"  {i+1}. {name} (ID: {topic_id})")
                            
                            # –ò—â–µ–º —Ç–æ–ø–∏–∫ —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
                            if any(keyword in name.lower() for keyword in ['–∞–Ω–æ–Ω—Å', '—Ç—Ä–µ–Ω–∏—Ä–æ–≤', 'announce']):
                                print(f"    üéØ –í–û–ó–ú–û–ñ–ù–û –≠–¢–û –ù–£–ñ–ù–´–ô –¢–û–ü–ò–ö!")
                    
                    elif method == "getChat":
                        chat_info = result.get("result", {})
                        print(f"üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:")
                        print(f"  –ù–∞–∑–≤–∞–Ω–∏–µ: {chat_info.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                        print(f"  –¢–∏–ø: {chat_info.get('type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                        print(f"  –§–æ—Ä—É–º: {chat_info.get('is_forum', False)}")
                        
                        if chat_info.get('is_forum'):
                            print("‚úÖ –≠—Ç–æ —Ñ–æ—Ä—É–º —Å —Ç–æ–ø–∏–∫–∞–º–∏")
                        else:
                            print("‚ùå –≠—Ç–æ –Ω–µ —Ñ–æ—Ä—É–º")
                
                else:
                    print(f"‚ùå –ú–µ—Ç–æ–¥ {method}: {result.get('description', '–û—à–∏–±–∫–∞')}")

async def try_different_topic_ids():
    """–ü—Ä–æ–±—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ä–∞–∑–Ω—ã–µ —Ç–æ–ø–∏–∫–∏"""
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = os.getenv('CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return
    
    from telegram import Bot
    bot = Bot(token=bot_token)
    
    print("\nüîç –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ä–∞–∑–Ω—ã–µ —Ç–æ–ø–∏–∫–∏...")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª—å—à–µ ID —Ç–æ–ø–∏–∫–æ–≤
    possible_ids = list(range(1, 51))  # 1-50
    
    for topic_id in possible_ids:
        try:
            print(f"üì§ –ü—Ä–æ–±—É—é —Ç–æ–ø–∏–∫ ID: {topic_id}")
            
            message = await bot.send_message(
                chat_id=chat_id,
                text=f"üîç –¢–µ—Å—Ç —Ç–æ–ø–∏–∫–∞ {topic_id}",
                message_thread_id=topic_id
            )
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ–ø–∏–∫ ID: {topic_id}")
            print(f"üìã ID —Å–æ–æ–±—â–µ–Ω–∏—è: {message.message_id}")
            
            # –°–ø—Ä–æ—Å–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            print(f"\n‚ùì –≠—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–ø–∏–∫ '–ê–ù–û–ù–°–´ –¢–†–ï–ù–ò–†–û–í–û–ö'? (y/n): ", end="")
            
            # –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã –∂–¥–∞—Ç—å –≤–≤–æ–¥–∞, –Ω–æ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
            print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ")
            
            return topic_id
            
        except Exception as e:
            error_msg = str(e)
            if "Message thread not found" in error_msg:
                print(f"‚ùå –¢–æ–ø–∏–∫ {topic_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            else:
                print(f"‚ùå –¢–æ–ø–∏–∫ {topic_id}: {error_msg[:50]}...")
            continue
    
    print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–æ–ø–∏–∫")

if __name__ == "__main__":
    asyncio.run(get_all_topics())
    # asyncio.run(try_different_topic_ids())
