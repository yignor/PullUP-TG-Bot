#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏ –∏–≥—Ä–æ–∫–æ–≤ —á–µ—Ä–µ–∑ Google Sheets
"""

import os
import json
import datetime
from typing import List, Dict, Any, Optional
from dotenv import load_dotenv
import gspread
from google.oauth2.service_account import Credentials

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
GOOGLE_SHEETS_CREDENTIALS = os.getenv("GOOGLE_SHEETS_CREDENTIALS")
SPREADSHEET_ID = os.getenv("SPREADSHEET_ID")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
SCOPES = [
    'https://www.googleapis.com/auth/spreadsheets',
    'https://www.googleapis.com/auth/drive'
]

class PlayersManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤"""
    
    def __init__(self):
        self.gc = None
        self.spreadsheet = None
        self.players_sheet = None
        self._init_google_sheets()
    
    def _init_google_sheets(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google Sheets"""
        try:
            if not GOOGLE_SHEETS_CREDENTIALS:
                print("‚ö†Ô∏è GOOGLE_SHEETS_CREDENTIALS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return
            
            if not SPREADSHEET_ID:
                print("‚ö†Ô∏è SPREADSHEET_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                return
            
            # –ü–∞—Ä—Å–∏–º JSON credentials
            creds_dict = json.loads(GOOGLE_SHEETS_CREDENTIALS)
            creds = Credentials.from_service_account_info(creds_dict, scopes=SCOPES)
            
            self.gc = gspread.authorize(creds)
            self.spreadsheet = self.gc.open_by_key(SPREADSHEET_ID)
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ª–∏—Å—Ç "–ò–≥—Ä–æ–∫–∏"
            try:
                self.players_sheet = self.spreadsheet.worksheet("–ò–≥—Ä–æ–∫–∏")
                print("‚úÖ –õ–∏—Å—Ç '–ò–≥—Ä–æ–∫–∏' –Ω–∞–π–¥–µ–Ω")
            except:
                # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç
                self.players_sheet = self.spreadsheet.add_worksheet(
                    title="–ò–≥—Ä–æ–∫–∏", 
                    rows=100, 
                    cols=10
                )
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
                headers = [
                    "–ò–º—è", "–ù–∏–∫", "Telegram ID", "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", 
                    "–°—Ç–∞—Ç—É—Å", "–ö–æ–º–∞–Ω–¥–∞", "–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è", "–ü—Ä–∏–º–µ—á–∞–Ω–∏—è"
                ]
                self.players_sheet.update('A1:H1', [headers])
                print("‚úÖ –õ–∏—Å—Ç '–ò–≥—Ä–æ–∫–∏' —Å–æ–∑–¥–∞–Ω —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏")
            
            print("‚úÖ Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Google Sheets: {e}")
    
    def get_all_players(self) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã"""
        try:
            if not self.players_sheet:
                print("‚ùå –õ–∏—Å—Ç '–ò–≥—Ä–æ–∫–∏' –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
                return []
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
            all_records = self.players_sheet.get_all_records()
            
            players = []
            for record in all_records:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
                if record.get('–ò–º—è') and record.get('–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è'):
                    player = {
                        'surname': record.get('–§–∞–º–∏–ª–∏—è', ''),  # –ù–æ–≤—ã–π —Å—Ç–æ–ª–±–µ—Ü "–§–∞–º–∏–ª–∏—è"
                        'name': record.get('–ò–º—è', ''),  # –°—Ç–æ–ª–±–µ—Ü "–ò–º—è" (—Ç–æ–ª—å–∫–æ –∏–º—è)
                        'nickname': record.get('–ù–∏–∫', ''),
                        'telegram_id': record.get('Telegram ID', ''),
                        'birthday': record.get('–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è', ''),
                        'status': record.get('–°—Ç–∞—Ç—É—Å', '–ê–∫—Ç–∏–≤–Ω—ã–π'),
                        'team': record.get('–ö–æ–º–∞–Ω–¥–∞', ''),
                        'added_date': record.get('–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è', ''),
                        'notes': record.get('–ü—Ä–∏–º–µ—á–∞–Ω–∏—è', '')
                    }
                    players.append(player)
            
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(players)} –∏–≥—Ä–æ–∫–æ–≤")
            return players
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤: {e}")
            return []
    
    def get_active_players(self) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤"""
        all_players = self.get_all_players()
        return [p for p in all_players if p.get('status', '').lower() == '–∞–∫—Ç–∏–≤–Ω—ã–π']
    
    def get_players_with_birthdays_today(self) -> List[Dict[str, Any]]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ —Å –¥–Ω—è–º–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è"""
        try:
            active_players = self.get_active_players()
            today = datetime.datetime.now()
            today_str = today.strftime("%m-%d")
            
            print(f"üìÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ {today_str}")
            print(f"üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(active_players)}")
            
            birthday_players = []
            for player in active_players:
                birthday = player.get('birthday', '')
                name = player.get('name', 'Unknown')
                surname = player.get('surname', '')
                
                if birthday:
                    try:
                        # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è
                        if '-' in birthday:
                            # –§–æ—Ä–º–∞—Ç YYYY-MM-DD
                            bd_date = datetime.datetime.strptime(birthday, "%Y-%m-%d")
                        elif '.' in birthday:
                            # –§–æ—Ä–º–∞—Ç DD.MM.YYYY
                            bd_date = datetime.datetime.strptime(birthday, "%d.%m.%Y")
                        else:
                            print(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è {surname} {name}: {birthday}")
                            continue
                        
                        bd_str = bd_date.strftime("%m-%d")
                        print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º {surname} {name}: {birthday} -> {bd_str} vs {today_str}")
                        
                        if bd_str == today_str:
                            # –í—ã—á–∏—Å–ª—è–µ–º –≤–æ–∑—Ä–∞—Å—Ç
                            age = today.year - bd_date.year
                            if today.month < bd_date.month or (today.month == bd_date.month and today.day < bd_date.day):
                                age -= 1
                            
                            player['age'] = age
                            birthday_players.append(player)
                            print(f"üéâ –ù–∞–π–¥–µ–Ω –∏–º–µ–Ω–∏–Ω–Ω–∏–∫: {surname} {name} ({age} –ª–µ—Ç)")
                            
                    except ValueError:
                        print(f"‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã –¥–ª—è {surname} {name}: {birthday}")
                        continue
                else:
                    print(f"‚ö†Ô∏è –ù–µ—Ç –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è –¥–ª—è {surname} {name}")
            
            print(f"üéÇ –í—Å–µ–≥–æ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤ —Å–µ–≥–æ–¥–Ω—è: {len(birthday_players)}")
            return birthday_players
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è: {e}")
            return []
    
    def add_player(self, name: str, birthday: str, nickname: str = "", 
                   telegram_id: str = "", team: str = "", notes: str = "", surname: str = "") -> bool:
        """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞"""
        try:
            if not self.players_sheet:
                print("‚ùå –õ–∏—Å—Ç '–ò–≥—Ä–æ–∫–∏' –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
                return False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
            if not name or not birthday:
                print("‚ùå –ò–º—è –∏ –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã")
                return False
            
            # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
            row_data = [
                surname,  # –§–∞–º–∏–ª–∏—è
                name,     # –ò–º—è
                nickname, # –ù–∏–∫
                telegram_id, # Telegram ID
                birthday, # –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
                "–ê–∫—Ç–∏–≤–Ω—ã–π", # –°—Ç–∞—Ç—É—Å
                team,     # –ö–æ–º–∞–Ω–¥–∞
                datetime.datetime.now().strftime("%Y-%m-%d"), # –î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                notes     # –ü—Ä–∏–º–µ—á–∞–Ω–∏—è
            ]
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
            self.players_sheet.append_row(row_data)
            print(f"‚úÖ –ò–≥—Ä–æ–∫ {surname} {name} –¥–æ–±–∞–≤–ª–µ–Ω")
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞: {e}")
            return False
    
    def update_player_status(self, name: str, status: str) -> bool:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞"""
        try:
            if not self.players_sheet:
                return False
            
            # –ò—â–µ–º –∏–≥—Ä–æ–∫–∞ –ø–æ –∏–º–µ–Ω–∏
            all_records = self.players_sheet.get_all_records()
            for i, record in enumerate(all_records, start=2):  # –ù–∞—á–∏–Ω–∞–µ–º —Å 2 (–ø–æ—Å–ª–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤)
                if record.get('–ò–º—è') == name:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    self.players_sheet.update(f'E{i}', status)
                    print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞ {name} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '{status}'")
                    return True
            
            print(f"‚ùå –ò–≥—Ä–æ–∫ {name} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {e}")
            return False
    
    def get_player_by_telegram_id(self, telegram_id: str) -> Optional[Dict[str, Any]]:
        """–ù–∞—Ö–æ–¥–∏—Ç –∏–≥—Ä–æ–∫–∞ –ø–æ Telegram ID"""
        try:
            all_players = self.get_all_players()
            for player in all_players:
                if player.get('telegram_id') == telegram_id:
                    return player
            return None
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∏–≥—Ä–æ–∫–∞: {e}")
            return None

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
players_manager = PlayersManager()

def get_years_word(age: int) -> str:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —Å–∫–ª–æ–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞ '–≥–æ–¥'"""
    if age % 10 == 1 and age % 100 != 11:
        return "–≥–æ–¥"
    elif age % 10 in [2, 3, 4] and age % 100 not in [12, 13, 14]:
        return "–≥–æ–¥–∞"
    else:
        return "–ª–µ—Ç"

def test_players_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–≥—Ä–æ–∫–æ–≤"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ï–ù–ï–î–ñ–ï–†–ê –ò–ì–†–û–ö–û–í")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not players_manager.players_sheet:
        print("‚ùå Google Sheets –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
    all_players = players_manager.get_all_players()
    print(f"üìä –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(all_players)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    active_players = players_manager.get_active_players()
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤: {len(active_players)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è
    birthday_players = players_manager.get_players_with_birthdays_today()
    print(f"üéÇ –î–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è: {len(birthday_players)}")
    
    if birthday_players:
        print("üéâ –ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∏:")
        for player in birthday_players:
            age = player.get('age', 0)
            years_word = get_years_word(age)
            print(f"   - {player['name']} ({age} {years_word})")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    test_players_manager()
