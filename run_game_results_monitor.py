#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä –≤ GitHub Actions
"""

import asyncio
import json
import os
from datetime import datetime, timezone, timedelta
from typing import Dict, Optional
from game_results_monitor import GameResultsMonitor, load_game_monitor_history, save_game_monitor_history
from datetime_utils import get_moscow_time, is_today
from game_system_manager import GameSystemManager

async def check_games_for_monitoring() -> list:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–≥—Ä—ã –æ—Ç GameSystemManager, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∞—Ç—å—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏–µ 15 –º–∏–Ω—É—Ç –∏–ª–∏ —É–∂–µ –º–æ–Ω–∏—Ç–æ—Ä—è—Ç—Å—è"""
    try:
        print("üîç –ü–†–û–í–ï–†–ö–ê –ò–ì–† –û–¢ GAMESYSTEMMANAGER")
        print("=" * 50)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        monitor_history = load_game_monitor_history()
        print(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {len(monitor_history)} –∑–∞–ø–∏—Å–µ–π")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç GameSystemManager
        games_to_monitor = []
        now = get_moscow_time()
        print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M:%S')}")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∏
        print("\nüéÆ –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–´–• –ú–û–ù–ò–¢–û–†–ò–ù–ì–û–í:")
        active_monitors = []
        for game_key, monitor_info in monitor_history.items():
            status = monitor_info.get('status', 'unknown')
            if status == 'monitoring':
                game_info = monitor_info.get('game_info', {})
                if game_info and is_today(game_info.get('date', '')):
                    active_monitors.append(game_info)
                    start_time = monitor_info.get('start_time', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                    print(f"   ‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: {game_info.get('team1', '')} vs {game_info.get('team2', '')}")
                    print(f"      üìÖ –î–∞—Ç–∞: {game_info.get('date', '')}")
                    print(f"      üïê –í—Ä–µ–º—è: {game_info.get('time', '')}")
                    print(f"      üöÄ –ù–∞—á–∞–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {start_time}")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∏ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        games_to_monitor.extend(active_monitors)
        if active_monitors:
            print(f"   üìä –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤: {len(active_monitors)}")
        else:
            print("   ‚ÑπÔ∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –¢–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç GameSystemManager
        print("\nüìÖ –ü–û–õ–£–ß–ï–ù–ò–ï –†–ê–°–ü–ò–°–ê–ù–ò–Ø –û–¢ GAMESYSTEMMANAGER:")
        try:
            # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä GameSystemManager –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–∞—Ö
            game_manager = GameSystemManager()
            print("   üîß –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä GameSystemManager")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä
            schedule = await game_manager.fetch_letobasket_schedule()
            
            if schedule:
                print(f"   ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ: {len(schedule)} –∏–≥—Ä")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∏–≥—Ä—ã —Å–µ–≥–æ–¥–Ω—è
                today_games = [game for game in schedule if is_today(game['date'])]
                print(f"   üìÖ –ò–≥—Ä —Å–µ–≥–æ–¥–Ω—è: {len(today_games)}")
                
                for i, game in enumerate(today_games, 1):
                    print(f"      {i}. {game['team1']} vs {game['team2']} - {game['date']} {game['time']}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä—ã —Å–µ–≥–æ–¥–Ω—è
                print(f"\nüîç –ê–ù–ê–õ–ò–ó –ò–ì–† –î–õ–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:")
                for game in schedule:
                    if not is_today(game['date']):
                        continue
                        
                    try:
                        # –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –∏–≥—Ä—ã
                        time_str = game['time'].replace('.', ':')
                        game_time = datetime.strptime(f"{game['date']} {time_str}", '%d.%m.%Y %H:%M')
                        game_time = game_time.replace(tzinfo=timezone(timedelta(hours=3)))  # –ú–°–ö
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ –∏–≥—Ä–∞ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 15 –º–∏–Ω—É—Ç
                        time_diff = (game_time - now).total_seconds()
                        
                        print(f"   üèÄ {game['team1']} vs {game['team2']}")
                        print(f"      üìÖ –î–∞—Ç–∞: {game['date']}")
                        print(f"      üïê –í—Ä–µ–º—è: {game['time']}")
                        print(f"      ‚è∞ –î–æ –Ω–∞—á–∞–ª–∞: {time_diff/60:.1f} –º–∏–Ω—É—Ç")
                        
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (15 –º–∏–Ω—É—Ç –¥–æ –Ω–∞—á–∞–ª–∞)
                        monitoring_start = game_time - timedelta(minutes=15)
                        monitoring_end = game_time + timedelta(hours=3)
                        
                        print(f"      üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å: {monitoring_start.strftime('%H:%M')}")
                        print(f"      üõë –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–æ: {monitoring_end.strftime('%H:%M')}")
                        
                        if 0 <= time_diff <= 900:  # –û—Ç 0 –¥–æ 15 –º–∏–Ω—É—Ç (900 —Å–µ–∫—É–Ω–¥)
                            print(f"      ‚úÖ –í –æ–∫–Ω–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!")
                            
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—à–∏ –∫–æ–º–∞–Ω–¥—ã –≤ –∏–≥—Ä–µ
                            if has_pull_up_team(game):
                                print(f"      üéØ –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞–π–¥–µ–Ω–∞!")
                                
                                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–º –ª–∏ —É–∂–µ —ç—Ç—É –∏–≥—Ä—É
                                game_key = f"{game['date']}_{game['time']}_{game['team1']}_{game['team2']}"
                                if game_key not in monitor_history:
                                    games_to_monitor.append(game)
                                    print(f"      ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
                                else:
                                    print(f"      ‚è≠Ô∏è –£–∂–µ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ")
                            else:
                                print(f"      ‚ùå –ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                        else:
                            if time_diff < 0:
                                print(f"      ‚è∞ –ò–≥—Ä–∞ —É–∂–µ –Ω–∞—á–∞–ª–∞—Å—å")
                            else:
                                print(f"      ‚è∞ –°–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
                            
                    except Exception as e:
                        print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏–≥—Ä—ã: {e}")
                        continue
            else:
                print("   ‚ùå –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ GameSystemManager")
                        
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç GameSystemManager: {e}")
        
        # –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞
        print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–í–û–î–ö–ê:")
        if games_to_monitor:
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(games_to_monitor)} –∏–≥—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:")
            for i, game in enumerate(games_to_monitor, 1):
                print(f"      {i}. {game['team1']} vs {game['team2']} - {game['date']} {game['time']}")
        else:
            print(f"   ‚ÑπÔ∏è –ù–µ—Ç –∏–≥—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ –±–ª–∏–∂–∞–π—à–∏–µ 15 –º–∏–Ω—É—Ç")
        
        print("=" * 50)
        return games_to_monitor
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–≥—Ä: {e}")
        return []



def has_pull_up_team(game_info: dict) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –∫–æ–º–∞–Ω–¥–∞ Pull Up –≤ –∏–≥—Ä–µ"""
    team1 = game_info.get('team1', '')
    team2 = game_info.get('team2', '')
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–º–∞–Ω–¥, —á—Ç–æ –∏ –≤ game_results_monitor.py
    target_teams = ['Pull Up-–§–∞—Ä–º', 'Pull Up –§–∞—Ä–º', 'Pull Up', 'PullUP']
    
    for variant in target_teams:
        if variant in team1 or variant in team2:
            return True
    
    return False

async def run_game_results_monitor():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–≥—Ä"""
    print("üèÄ –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ò–ì–†")
    print("=" * 60)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    now = get_moscow_time()
    print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (–ú–æ—Å–∫–≤–∞): {now.strftime('%d.%m.%Y %H:%M:%S')}")
    print(f"üîÑ Workflow –∑–∞–ø—É—â–µ–Ω: {now.strftime('%H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–≥—Ä—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    games_to_monitor = await check_games_for_monitoring()
    
    if not games_to_monitor:
        print("\nüìÖ –ù–µ—Ç –∏–≥—Ä –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É")
        print("=" * 60)
        return
    
    try:
        print(f"\nüéÆ –ó–ê–ü–£–°–ö –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê –ò–ì–†:")
        print("=" * 50)
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        monitor_history = load_game_monitor_history()
        print(f"üìã –ò—Å—Ç–æ—Ä–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(monitor_history)} –∑–∞–ø–∏—Å–µ–π")
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–Ω–∏—Ç–æ—Ä–∞
        monitor = GameResultsMonitor()
        print("üîß –°–æ–∑–¥–∞–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä GameResultsMonitor")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –∫–∞–∂–¥–æ–π –∏–≥—Ä—ã
        for i, game in enumerate(games_to_monitor, 1):
            print(f"\nüéÆ –ò–ì–†–ê {i}/{len(games_to_monitor)}: {game['team1']} vs {game['team2']}")
            print(f"   üìÖ –î–∞—Ç–∞: {game['date']}")
            print(f"   üïê –í—Ä–µ–º—è: {game['time']}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É –≤ –∏—Å—Ç–æ—Ä–∏–∏
            game_key = f"{game['date']}_{game['time']}_{game['team1']}_{game['team2']}"
            game_link = ""
            
            if game_key in monitor_history:
                game_link = monitor_history[game_key].get('game_link', '')
                status = monitor_history[game_key].get('status', 'unknown')
                start_time = monitor_history[game_key].get('start_time', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                print(f"   üìã –°—Ç–∞—Ç—É—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏: {status}")
                print(f"   üöÄ –ù–∞—á–∞–ª–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {start_time}")
                print(f"   üîó –°—Å—ã–ª–∫–∞: {game_link}")
            else:
                print(f"   üìã –°—Ç–∞—Ç—É—Å –≤ –∏—Å—Ç–æ—Ä–∏–∏: –Ω–æ–≤–∞—è –∏–≥—Ä–∞")
                print(f"   üîó –°—Å—ã–ª–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            
            # –ï—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–µ—Ç, –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –µ—ë
            if not game_link:
                print(f"   üîç –ò—â–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É...")
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–∫–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
            print(f"   üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
            success = await monitor.start_monitoring_for_game(game, game_link)
            
            if success:
                print(f"   ‚úÖ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
            else:
                print(f"   ‚è≥ –ò–≥—Ä–∞ –µ—â–µ –∏–¥–µ—Ç –∏–ª–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
        save_game_monitor_history(monitor_history)
        
        print(f"\nüìã –ò–¢–û–ì–ò –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê:")
        print(f"   –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∏–≥—Ä: {len(games_to_monitor)}")
        print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: {len(monitor_history)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        end_time = get_moscow_time()
        print(f"   üïê –í—Ä–µ–º—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {end_time.strftime('%H:%M:%S')}")
        print(f"   ‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {(end_time - now).total_seconds():.1f} —Å–µ–∫—É–Ω–¥")
        
        print(f"\n‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")
        print("=" * 60)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(run_game_results_monitor())
