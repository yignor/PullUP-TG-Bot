#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
"""

import os
import asyncio
import aiohttp
from telegram import Bot
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def send_to_topic_and_check():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = os.getenv('CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        return
    
    bot = Bot(token=bot_token)
    
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä—è–º–æ –≤ —Ç–æ–ø–∏–∫ '–ê–ù–û–ù–°–´ –¢–†–ï–ù–ò–†–û–í–û–ö'...")
    print("üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∞ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –≤ —Ç–æ–ø–∏–∫–∏")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö ID —Ç–æ–ø–∏–∫–æ–≤
    possible_ids = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
    
    for topic_id in possible_ids:
        try:
            print(f"\nüîç –ü—Ä–æ–±—É—é —Ç–æ–ø–∏–∫ ID: {topic_id}")
            
            message = await bot.send_message(
                chat_id=chat_id,
                text=f"üèÄ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫ (ID: {topic_id})",
                message_thread_id=topic_id
            )
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —Ç–æ–ø–∏–∫ ID: {topic_id}")
            print(f"üìã ID —Å–æ–æ–±—â–µ–Ω–∏—è: {message.message_id}")
            
            # –°—Ä–∞–∑—É –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            print("\nüîç –ü—Ä–æ–≤–µ—Ä—è—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
            await check_updates_for_topic(topic_id)
            
            return topic_id
            
        except Exception as e:
            print(f"‚ùå –¢–æ–ø–∏–∫ ID {topic_id}: {str(e)[:50]}...")
            continue
    
    print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID —Ç–æ–ø–∏–∫–∞")
    print("üìù –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω–æ–π —Å–ø–æ—Å–æ–± –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞")

async def check_updates_for_topic(expected_topic_id):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ç–æ–ø–∏–∫–∞"""
    
    bot_token = os.getenv('BOT_TOKEN')
    
    url = f"https://api.telegram.org/bot{bot_token}/getUpdates"
    
    async with aiohttp.ClientSession() as session:
        async with session.get(url) as response:
            result = await response.json()
            
            if result.get("ok"):
                updates = result.get("result", [])
                print(f"üìã –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
                
                for update in updates:
                    if "message" in update:
                        message = update["message"]
                        
                        if "message_thread_id" in message:
                            topic_id = message["message_thread_id"]
                            text = message.get("text", "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞")
                            
                            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ç–æ–ø–∏–∫ ID: {topic_id}")
                            print(f"üí¨ –¢–µ–∫—Å—Ç: {text}")
                            
                            if topic_id == expected_topic_id:
                                print(f"üéØ –≠–¢–û –ü–†–ê–í–ò–õ–¨–ù–´–ô –¢–û–ü–ò–ö!")
                                print(f"üìù –î–æ–±–∞–≤—å—Ç–µ –≤ .env:")
                                print(f"ANNOUNCEMENTS_TOPIC_ID={topic_id}")
                                return topic_id
                            else:
                                print(f"üìù –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π ID —Ç–æ–ø–∏–∫–∞: {topic_id}")
                
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {result}")

if __name__ == "__main__":
    asyncio.run(send_to_topic_and_check())
