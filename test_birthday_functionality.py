#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è
"""

import datetime
import os
from dotenv import load_dotenv
from birthday_bot_simple import players, get_years_word, should_check_birthdays

def load_env_variables():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    try:
        load_dotenv()
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ python-dotenv")
    except ImportError:
        try:
            with open('.env', 'r') as f:
                for line in f:
                    line = line.strip()
                    if line and not line.startswith('#') and '=' in line:
                        key, value = line.split('=', 1)
                        os.environ[key] = value
            print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞")
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = os.getenv('CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    print(f"‚úÖ BOT_TOKEN: {bot_token[:10]}...")
    print(f"‚úÖ CHAT_ID: {chat_id}")
    return True

def test_birthday_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê –î–ù–ï–ô –†–û–ñ–î–ï–ù–ò–Ø ===\n")
    
    if not load_env_variables():
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
    now = datetime.datetime.now()
    print(f"1. –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {now.strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
    should_check = should_check_birthdays()
    print(f"2. –ù—É–∂–Ω–æ –ª–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è: {'‚úÖ –î–∞' if should_check else '‚ùå –ù–µ—Ç'}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
    print(f"\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞ {now.strftime('%Y-%m-%d')}:")
    today_md = now.strftime("%m-%d")
    birthday_people = []
    
    for player in players:
        try:
            birthday = datetime.datetime.strptime(player["birthday"], "%Y-%m-%d")
            if birthday.strftime("%m-%d") == today_md:
                age = now.year - birthday.year
                birthday_people.append(f"{player['name']} ({age} {get_years_word(age)})")
                print(f"   ‚úÖ {player['name']} - {age} {get_years_word(age)}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {player['name']}: {e}")
    
    if birthday_people:
        print(f"\n4. –ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∏ —Å–µ–≥–æ–¥–Ω—è: {', '.join(birthday_people)}")
        message = "üéâ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É " + ", ".join(birthday_people) + "! \n –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéÇ"
        print(f"5. –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: {message}")
    else:
        print("4. –°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è
    print(f"\n6. –ë–ª–∏–∂–∞–π—à–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è:")
    upcoming_birthdays = []
    
    for i in range(1, 31):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–µ–¥—É—é—â–∏–µ 30 –¥–Ω–µ–π
        future_date = now + datetime.timedelta(days=i)
        future_md = future_date.strftime("%m-%d")
        
        for player in players:
            try:
                birthday = datetime.datetime.strptime(player["birthday"], "%Y-%m-%d")
                if birthday.strftime("%m-%d") == future_md:
                    age = future_date.year - birthday.year
                    upcoming_birthdays.append({
                        'name': player['name'],
                        'date': future_date.strftime('%Y-%m-%d'),
                        'age': age,
                        'days_until': i
                    })
            except Exception:
                continue
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
    upcoming_birthdays.sort(key=lambda x: x['days_until'])
    
    for i, birthday in enumerate(upcoming_birthdays[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
        print(f"   {i}. {birthday['name']} - {birthday['date']} ({birthday['age']} {get_years_word(birthday['age'])}) - —á–µ—Ä–µ–∑ {birthday['days_until']} –¥–Ω–µ–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –æ–ø—Ä–æ—Å–æ–≤
    print(f"\n7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –æ–ø—Ä–æ—Å–æ–≤:")
    if should_check and birthday_people:
        print("   ‚úÖ –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è")
    else:
        print("   ‚ö†Ô∏è –ù–µ –≤—Ä–µ–º—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –Ω–µ—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –±–æ—Ç–æ–≤
    print(f"\n8. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –±–æ—Ç–æ–≤:")
    import os
    
    bot_files = [
        'birthday_bot.py',
        'birthday_bot_simple.py',
        'pullup_notifications.py'
    ]
    
    for bot_file in bot_files:
        if os.path.exists(bot_file):
            print(f"   ‚úÖ {bot_file} - —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        else:
            print(f"   ‚ùå {bot_file} - –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")

if __name__ == "__main__":
    test_birthday_functionality()
