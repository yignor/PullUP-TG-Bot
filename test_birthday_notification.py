#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è
"""

import asyncio
import os
from dotenv import load_dotenv
from telegram import Bot
from birthday_bot_simple import get_years_word

def load_env_variables():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    try:
        load_dotenv()
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ python-dotenv")
    except ImportError:
        try:
            with open('.env', 'r') as f:
                for line in f:
                    line = line.strip()
                    if line and not line.startswith('#') and '=' in line:
                        key, value = line.split('=', 1)
                        os.environ[key] = value
            print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞")
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False, None, None
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = os.getenv('CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False, None, None
    
    print(f"‚úÖ BOT_TOKEN: {bot_token[:10]}...")
    print(f"‚úÖ CHAT_ID: {chat_id}")
    return True, bot_token, chat_id

async def test_birthday_notification():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø –û –î–ù–ï –†–û–ñ–î–ï–ù–ò–Ø ===\n")
    
    success, bot_token, chat_id = load_env_variables()
    if not success:
        return
    
    try:
        bot = Bot(token=bot_token)
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞
        test_birthday_people = [
            "–®–∞—Ö–º–∞–Ω–æ–≤ –ú–∞–∫—Å–∏–º (19 –ª–µ—Ç)",
            "–•–∞–Ω –ê–ª–µ–∫—Å–∞–Ω–¥—Ä (31 –≥–æ–¥)"
        ]
        
        print(f"1. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è...")
        text = "üéâ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É " + ", ".join(test_birthday_people) + "! \n –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéÇ"
        
        await bot.send_message(chat_id=chat_id, text=text)
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {text}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–æ—Å –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        print(f"\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è...")
        
        question = f"üéÇ –ö–∞–∫ –ø–æ–∑–¥—Ä–∞–≤–∏—Ç—å {test_birthday_people[0]} —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è?"
        options = [
            "üéâ –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ —á–∞—Ç–µ",
            "üéµ –ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ",
            "üèÄ –ë–∞—Å–∫–µ—Ç–±–æ–ª—å–Ω–æ–µ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ",
            "üéÅ –ü–æ–¥–∞—Ä–æ–∫ –∫–æ–º–∞–Ω–¥–µ",
            "üç∞ –¢–æ—Ä—Ç –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫"
        ]
        
        # –°–æ–∑–¥–∞–µ–º –æ–ø—Ä–æ—Å
        poll = await bot.send_poll(
            chat_id=chat_id,
            question=question,
            options=options,
            is_anonymous=False,
            allows_multiple_answers=False
        )
        
        print("‚úÖ –û–ø—Ä–æ—Å –¥–ª—è –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω!")
        print(f"   –í–æ–ø—Ä–æ—Å: {question}")
        print(f"   –í–∞—Ä–∏–∞–Ω—Ç—ã: {', '.join(options)}")
        
        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram —á–∞—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_birthday_notification())
