#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π
"""

import asyncio
import json
from datetime import datetime
from daily_poll_monitor import DailyPollMonitor

async def test_monitor():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π")
    
    monitor = DailyPollMonitor()
    
    # –¢–µ—Å—Ç 1: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
    init_success = await monitor.initialize()
    if init_success:
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏")
        return False
    
    # –¢–µ—Å—Ç 2: –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤...")
    active_polls = monitor.get_active_polls_info()
    print(f"üìã –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–ø—Ä–æ—Å—ã: {active_polls}")
    
    if active_polls:
        print("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ –æ–ø—Ä–æ—Å—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã")
    else:
        print("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ, –≤—ã—Ö–æ–¥–Ω–æ–π)")
    
    # –¢–µ—Å—Ç 3: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–µ–Ω...")
    test_names = [
        ("–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", "@ivan_petrov"),
        ("–ê–Ω–Ω–∞", "@anna"),
        ("", "@username_only"),
        ("–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", "@maria_s")
    ]
    
    for name, telegram_id in test_names:
        formatted = monitor.format_player_name(name, telegram_id)
        print(f"   '{name}' + '{telegram_id}' ‚Üí '{formatted}'")
    
    print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç")
    
    # –¢–µ—Å—Ç 4: –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –≥–æ–ª–æ—Å–æ–≤...")
    test_poll_id = "test_poll_123"
    test_votes = {
        12345: {
            'name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
            'options': [0, 1],  # –í—Ç–æ—Ä–Ω–∏–∫ –∏ –ø—è—Ç–Ω–∏—Ü–∞
            'update_id': 1001
        },
        67890: {
            'name': '–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
            'options': [0],  # –¢–æ–ª—å–∫–æ –≤—Ç–æ—Ä–Ω–∏–∫
            'update_id': 1002
        }
    }
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –≥–æ–ª–æ—Å–∞
    monitor.save_current_votes(test_poll_id, test_votes)
    print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –≥–æ–ª–æ—Å–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
    loaded_votes = monitor.load_previous_votes(test_poll_id)
    if loaded_votes == test_votes:
        print("‚úÖ –ì–æ–ª–æ—Å–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–æ–ª–æ—Å–æ–≤")
        return False
    
    # –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    print("\n5Ô∏è‚É£ –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π...")
    
    # –ò–∑–º–µ–Ω—è–µ–º –≥–æ–ª–æ—Å–∞
    new_votes = {
        12345: {
            'name': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
            'options': [1],  # –¢–æ–ª—å–∫–æ –ø—è—Ç–Ω–∏—Ü–∞ (–∏–∑–º–µ–Ω–∏–ª –≤—ã–±–æ—Ä)
            'update_id': 1003
        },
        67890: {
            'name': '–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞',
            'options': [0],  # –û—Å—Ç–∞–ª—Å—è –≤—Ç–æ—Ä–Ω–∏–∫
            'update_id': 1004
        },
        11111: {  # –ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫
            'name': '–ü–µ—Ç—Ä –ù–æ–≤—ã–π',
            'options': [0, 1],
            'update_id': 1005
        }
        # 67890 —É–¥–∞–ª–µ–Ω (–±–æ–ª—å—à–µ –Ω–µ –≥–æ–ª–æ—Å—É–µ—Ç)
    }
    
    added, removed, changed = monitor.find_vote_changes(test_votes, new_votes)
    
    print(f"   –ù–æ–≤—ã–µ –≥–æ–ª–æ—Å–∞: {len(added)}")
    print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–∞: {len(removed)}")
    print(f"   –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–∞: {len(changed)}")
    
    if len(added) == 1 and len(removed) == 0 and len(changed) == 1:
        print("‚úÖ –ü–æ–∏—Å–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ–∏—Å–∫–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        return False
    
    # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
    import os
    test_file = f"poll_votes_{test_poll_id}.json"
    if os.path.exists(test_file):
        os.remove(test_file)
        print("üßπ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    return True

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    try:
        success = await test_monitor()
        if success:
            print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
        else:
            print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")

if __name__ == "__main__":
    asyncio.run(main())
