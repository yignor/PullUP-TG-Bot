#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä —Å —Å–∏–º—É–ª—è—Ü–∏–µ–π
"""

import asyncio
import os
from dotenv import load_dotenv
from pullup_notifications import PullUPNotificationManager

def load_env_variables():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    try:
        load_dotenv()
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ python-dotenv")
    except ImportError:
        try:
            with open('.env', 'r') as f:
                for line in f:
                    line = line.strip()
                    if line and not line.startswith('#') and '=' in line:
                        key, value = line.split('=', 1)
                        os.environ[key] = value
            print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞")
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
    
    bot_token = os.getenv('BOT_TOKEN')
    chat_id = os.getenv('CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
    
    print(f"‚úÖ BOT_TOKEN: {bot_token[:10]}...")
    print(f"‚úÖ CHAT_ID: {chat_id}")
    return True

async def test_finished_games_simulation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä —Å —Å–∏–º—É–ª—è—Ü–∏–µ–π"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–ù–´–• –ò–ì–† (–°–ò–ú–£–õ–Ø–¶–ò–Ø) ===\n")
    
    if not load_env_variables():
        return
    
    manager = PullUPNotificationManager()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
    print("1. –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–±–µ–¥–∞ Pull Up
    print("\n2. –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ–±–µ–¥–µ Pull Up:")
    test_game_1 = {
        'pullup_team': 'Pull Up',
        'opponent_team': 'IT Basket',
        'pullup_score': 85,
        'opponent_score': 72,
        'date': '16.08.2025',
        'game_link': 'http://letobasket.ru/game.html?gameId=921733&apiUrl=https://reg.infobasket.su&lang=ru'
    }
    
    try:
        await manager.send_finish_notification(test_game_1)
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–∏–≥—Ä—ã—à Pull Up
    print("\n3. –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–∏–≥—Ä—ã—à–µ Pull Up:")
    test_game_2 = {
        'pullup_team': 'Pull Up',
        'opponent_team': '–ú–∞–∏–ª–µ –ö–∞—Ä–≥–æ',
        'pullup_score': 65,
        'opponent_score': 78,
        'date': '16.08.2025',
        'game_link': 'http://letobasket.ru/game.html?gameId=921726&apiUrl=https://reg.infobasket.su&lang=ru'
    }
    
    try:
        await manager.send_finish_notification(test_game_2)
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–∏–≥—Ä—ã—à–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ù–∏—á—å—è
    print("\n4. –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∏—á—å–µ–π:")
    test_game_3 = {
        'pullup_team': 'Pull Up',
        'opponent_team': '–¢–æ—Å–Ω–æ',
        'pullup_score': 75,
        'opponent_score': 75,
        'date': '16.08.2025',
        'game_link': 'http://letobasket.ru/game.html?gameId=921727&apiUrl=https://reg.infobasket.su&lang=ru'
    }
    
    try:
        await manager.send_finish_notification(test_game_3)
        print("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∏—á—å–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
    print("\nüìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram —á–∞—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")

if __name__ == "__main__":
    asyncio.run(test_finished_games_simulation())
