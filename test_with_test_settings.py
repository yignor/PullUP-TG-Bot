#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
"""

import asyncio
import os
from dotenv import load_dotenv
from telegram import Bot

def load_test_env_variables():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞"""
    try:
        load_dotenv()
        print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —á–µ—Ä–µ–∑ python-dotenv")
    except ImportError:
        try:
            with open('.env', 'r') as f:
                for line in f:
                    line = line.strip()
                    if line and not line.startswith('#') and '=' in line:
                        key, value = line.split('=', 1)
                        os.environ[key] = value
            print("‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ .env —Ñ–∞–π–ª–∞")
        except FileNotFoundError:
            print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False, None, None
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    bot_token = os.getenv('TEST_BOT_TOKEN')
    chat_id = os.getenv('TEST_CHAT_ID')
    
    if not bot_token or not chat_id:
        print("‚ùå TEST_BOT_TOKEN –∏–ª–∏ TEST_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False, None, None
    
    print(f"‚úÖ TEST_BOT_TOKEN: {bot_token[:10]}...")
    print(f"‚úÖ TEST_CHAT_ID: {chat_id}")
    print("üîß –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¢–ï–°–¢–û–í–´–ï –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    return True, bot_token, chat_id

async def test_with_test_settings():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –° –¢–ï–°–¢–û–í–´–ú–ò –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò ===\n")
    
    success, bot_token, chat_id = load_test_env_variables()
    if not success:
        return
    
    try:
        bot = Bot(token=bot_token)
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏")
        
        # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        print(f"1. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        test_message = "üß™ –¢–ï–°–¢–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï\n\n–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞."
        
        await bot.send_message(chat_id=chat_id, text=test_message)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –æ–ø—Ä–æ—Å
        print(f"\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–ø—Ä–æ—Å–∞...")
        test_question = "üß™ –¢–µ—Å—Ç–æ–≤—ã–π –æ–ø—Ä–æ—Å"
        test_options = [
            "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç",
            "‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç",
            "‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏"
        ]
        
        poll = await bot.send_poll(
            chat_id=chat_id,
            question=test_question,
            options=test_options,
            allows_multiple_answers=False,
            is_anonymous=False,
            explanation="–¢–µ—Å—Ç–æ–≤—ã–π –æ–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞"
        )
        
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω!")
        print(f"   –í–æ–ø—Ä–æ—Å: {poll.poll.question}")
        print(f"   –í–∞—Ä–∏–∞–Ω—Ç—ã: {poll.poll.options}")
        
        print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===")
        print("üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π Telegram —á–∞—Ç –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_with_test_settings())
