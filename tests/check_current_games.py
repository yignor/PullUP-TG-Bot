#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–∏—Ö –∏–≥—Ä –Ω–∞ —Å–∞–π—Ç–µ
"""
import sys
import os
sys.path.append('..')

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def check_current_games():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –∏–≥—Ä—ã –Ω–∞ —Å–∞–π—Ç–µ"""
    print("üîç –ü–†–û–í–ï–†–ö–ê –¢–ï–ö–£–©–ò–• –ò–ì–† –ù–ê –°–ê–ô–¢–ï")
    print("=" * 50)
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get('http://letobasket.ru/') as response:
                content = await response.text()
                
        soup = BeautifulSoup(content, 'html.parser')
        
        # –ò—â–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
        tables = soup.find_all('table')
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        
        # –ò—â–µ–º –∏–≥—Ä—ã —Å PullUP
        pullup_games = []
        
        for i, table in enumerate(tables):
            rows = table.find_all('tr')
            for row in rows:
                cells = row.find_all(['td', 'th'])
                row_text = ' '.join([cell.get_text().strip() for cell in cells])
                
                # –ò—â–µ–º PullUP –∫–æ–º–∞–Ω–¥—ã
                if re.search(r'pull\s*up', row_text, re.IGNORECASE):
                    print(f"\nüèÄ –ù–ê–ô–î–ï–ù–ê –ò–ì–†–ê PULLUP –≤ —Ç–∞–±–ª–∏—Ü–µ {i+1}:")
                    print(f"   –¢–µ–∫—Å—Ç: {row_text[:200]}...")
                    
                    # –ò—â–µ–º –¥–∞—Ç—É
                    date_match = re.search(r'(\d{2}\.\d{2}\.\d{4})', row_text)
                    if date_match:
                        game_date = date_match.group(1)
                        print(f"   –î–∞—Ç–∞: {game_date}")
                        
                        # –ò—â–µ–º —Å—á–µ—Ç
                        score_match = re.search(r'(\d+)\s*[:\-‚Äì]\s*(\d+)', row_text)
                        if score_match:
                            score1, score2 = score_match.groups()
                            print(f"   –°—á–µ—Ç: {score1}:{score2}")
                            
                            pullup_games.append({
                                'date': game_date,
                                'score': f"{score1}:{score2}",
                                'text': row_text[:100]
                            })
        
        print(f"\nüìà –ò–¢–û–ì–û –ù–ê–ô–î–ï–ù–û –ò–ì–† PULLUP: {len(pullup_games)}")
        
        if pullup_games:
            print("\nüéØ –î–ï–¢–ê–õ–ò –ò–ì–†:")
            for i, game in enumerate(pullup_games, 1):
                print(f"   {i}. –î–∞—Ç–∞: {game['date']}, –°—á–µ—Ç: {game['score']}")
                print(f"      –¢–µ–∫—Å—Ç: {game['text']}...")
        else:
            print("‚úÖ –ò–≥—Ä PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(check_current_games())
