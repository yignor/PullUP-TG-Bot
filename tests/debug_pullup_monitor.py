#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ PullUP Monitor
–ü–æ–º–æ–≥–∞–µ—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ –∏–≥—Ä—ã –Ω–∞—Ö–æ–¥–∏—Ç —Å–∏—Å—Ç–µ–º–∞ –∏ –ø–æ—á–µ–º—É
"""
import sys
import os
sys.path.append('..')

import asyncio
import logging
from game_parser import game_parser

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def debug_pullup_monitor():
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è PullUP Monitor"""
    try:
        logger.info("üîç –û–¢–õ–ê–î–ö–ê PULLUP MONITOR")
        logger.info("=" * 50)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        logger.info("üì° –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å —Å–∞–π—Ç–∞...")
        html_content = await game_parser.get_fresh_page_content()
        logger.info(f"‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω, —Ä–∞–∑–º–µ—Ä: {len(html_content)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        logger.info("üìÖ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã...")
        current_date = game_parser.extract_current_date(html_content)
        if not current_date:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É")
            return
        logger.info(f"‚úÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
        logger.info("üèÄ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä PullUP...")
        finished_games = game_parser.check_finished_games(html_content, current_date)
        
        logger.info("=" * 50)
        logger.info("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:")
        logger.info(f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∏–≥—Ä: {len(finished_games)}")
        
        if not finished_games:
            logger.info("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            return
        
        for i, game in enumerate(finished_games, 1):
            logger.info(f"\nüéØ –ò–ì–†–ê #{i}:")
            logger.info(f"   –ö–æ–º–∞–Ω–¥–∞ PullUP: {game.get('pullup_team', 'N/A')}")
            logger.info(f"   –°–æ–ø–µ—Ä–Ω–∏–∫: {game.get('opponent_team', 'N/A')}")
            logger.info(f"   –°—á–µ—Ç: {game.get('pullup_score', 'N/A')}:{game.get('opponent_score', 'N/A')}")
            logger.info(f"   –î–∞—Ç–∞: {game.get('date', 'N/A')}")
            logger.info(f"   –°—Å—ã–ª–∫–∞: {game.get('game_link', 'N/A')}")
        
        logger.info("\n" + "=" * 50)
        logger.info("‚úÖ –û–¢–õ–ê–î–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–ª–∞–¥–∫–µ: {e}")
        import traceback
        logger.error(traceback.format_exc())

if __name__ == "__main__":
    asyncio.run(debug_pullup_monitor())
