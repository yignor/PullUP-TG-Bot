#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–∞–π—Ç–∞
"""
import sys
import os
sys.path.append('..')

import asyncio
import aiohttp
from bs4 import BeautifulSoup
import re

async def debug_site_structure():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å–∞–π—Ç–∞"""
    print("üîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –°–ê–ô–¢–ê")
    print("=" * 50)
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get('http://letobasket.ru/') as response:
                content = await response.text()
                
        soup = BeautifulSoup(content, 'html.parser')
        
        # –ò—â–µ–º –±–ª–æ–∫–∏ —Å –∏–≥—Ä–∞–º–∏
        print("üìä –ü–û–ò–°–ö –ë–õ–û–ö–û–í –° –ò–ì–†–ê–ú–ò:")
        
        # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
        headers = soup.find_all(['h1', 'h2', 'h3', 'h4', 'h5', 'h6'])
        for header in headers:
            header_text = header.get_text().strip()
            if any(word in header_text.lower() for word in ['–∏–≥—Ä–∞', '–º–∞—Ç—á', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', '—Ä–µ–∑—É–ª—å—Ç–∞—Ç']):
                print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {header_text}")
        
        # –ò—â–µ–º div —Å –∫–ª–∞—Å—Å–∞–º–∏
        divs = soup.find_all('div', class_=True)
        for div in divs:
            class_name = ' '.join(div.get('class', []))
            if any(word in class_name.lower() for word in ['game', 'match', 'result', 'schedule']):
                print(f"   Div —Å –∫–ª–∞—Å—Å–æ–º: {class_name}")
        
        # –ò—â–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –¥–∞—Ç–∞–º–∏
        tables = soup.find_all('table')
        print(f"\nüìÖ –¢–ê–ë–õ–ò–¶–´ –° –î–ê–¢–ê–ú–ò:")
        
        for i, table in enumerate(tables):
            table_text = table.get_text()
            
            # –ò—â–µ–º –¥–∞—Ç—ã –≤ —Ç–∞–±–ª–∏—Ü–µ
            dates = re.findall(r'\d{2}\.\d{2}\.\d{4}', table_text)
            if dates:
                print(f"   –¢–∞–±–ª–∏—Ü–∞ {i+1}: –Ω–∞–π–¥–µ–Ω–æ {len(dates)} –¥–∞—Ç")
                print(f"     –î–∞—Ç—ã: {dates[:3]}...")  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –¥–∞—Ç—ã
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ PullUP –≤ —ç—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ
                if re.search(r'pull\s*up', table_text, re.IGNORECASE):
                    print(f"     ‚úÖ –°–æ–¥–µ—Ä–∂–∏—Ç PullUP!")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å PullUP
                    rows = table.find_all('tr')
                    for row in rows:
                        row_text = row.get_text()
                        if re.search(r'pull\s*up', row_text, re.IGNORECASE):
                            print(f"       –°—Ç—Ä–æ–∫–∞: {row_text[:100]}...")
        
        # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏–≥—Ä—ã —Å –¥–∞—Ç–∞–º–∏
        print(f"\nüéØ –ü–û–ò–°–ö –ö–û–ù–ö–†–ï–¢–ù–´–• –ò–ì–†:")
        
        # –ò—â–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω "–¥–∞—Ç–∞ - –∫–æ–º–∞–Ω–¥–∞1 - –∫–æ–º–∞–Ω–¥–∞2 - —Å—á–µ—Ç"
        game_pattern = r'(\d{2}\.\d{2}\.\d{4})\s*-\s*([^-]+)\s*-\s*([^-]+)\s*(\d+:\d+)'
        matches = re.findall(game_pattern, content)
        
        for match in matches:
            date, team1, team2, score = match
            if 'pull' in team1.lower() or 'pull' in team2.lower():
                print(f"   –ò–≥—Ä–∞: {date} - {team1.strip()} vs {team2.strip()} - {score}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(debug_site_structure())
