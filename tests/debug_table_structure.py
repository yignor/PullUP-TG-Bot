#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã –∏–≥—Ä
"""

import asyncio
import os
import re
from bs4 import BeautifulSoup
import aiohttp
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

LETOBASKET_URL = "http://letobasket.ru/"

async def get_fresh_page_content():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'Cache-Control': 'no-cache',
        'Pragma': 'no-cache'
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(LETOBASKET_URL, headers=headers) as response:
            return await response.text()

def debug_table_structure(html_content):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã"""
    print("üîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´")
    print("=" * 60)
    
    soup = BeautifulSoup(html_content, 'html.parser')
    
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å PullUP
    pullup_patterns = [
        r'pull\s*up',
        r'PullUP',
        r'Pull\s*Up'
    ]
    
    game_rows = soup.find_all('tr')
    
    for i, row in enumerate(game_rows):
        row_text = row.get_text()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ PullUP
        is_pullup_game = any(re.search(pattern, row_text, re.IGNORECASE) for pattern in pullup_patterns)
        
        if is_pullup_game:
            print(f"\nüèÄ –ù–ê–ô–î–ï–ù–ê –ò–ì–†–ê PULLUP (—Å—Ç—Ä–æ–∫–∞ {i+1}):")
            print(f"   –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç: {row_text.strip()}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —è—á–µ–µ–∫
            cells = row.find_all('td')
            print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —è—á–µ–µ–∫: {len(cells)}")
            
            for j, cell in enumerate(cells):
                cell_text = cell.get_text().strip()
                if cell_text:
                    print(f"   –Ø—á–µ–π–∫–∞ {j+1}: '{cell_text}'")
            
            # –ò—â–µ–º —Å—á–µ—Ç
            score_match = re.search(r'(\d+)\s*:\s*(\d+)', row_text)
            if score_match:
                score1, score2 = score_match.groups()
                print(f"   üìä –°—á–µ—Ç: {score1} : {score2}")
            
            print("-" * 40)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ê–ù–ê–õ–ò–ó –°–¢–†–£–ö–¢–£–†–´ –¢–ê–ë–õ–ò–¶–´ –ò–ì–†")
    print("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        print("üì° –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞...")
        html_content = await get_fresh_page_content()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        debug_table_structure(html_content)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
