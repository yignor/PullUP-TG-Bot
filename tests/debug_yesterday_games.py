#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–≥—Ä –Ω–∞ 16.08.2025
"""

import asyncio
import os
import re
from bs4 import BeautifulSoup
import aiohttp
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

LETOBASKET_URL = "http://letobasket.ru/"

async def get_fresh_page_content():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
        'Cache-Control': 'no-cache',
        'Pragma': 'no-cache'
    }
    
    async with aiohttp.ClientSession() as session:
        async with session.get(LETOBASKET_URL, headers=headers) as response:
            return await response.text()

def debug_yesterday_games(html_content):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–≥—Ä—ã –Ω–∞ 16.08.2025"""
    print("üîç –ê–ù–ê–õ–ò–ó –ò–ì–† –ù–ê 16.08.2025")
    print("=" * 60)
    
    soup = BeautifulSoup(html_content, 'html.parser')
    
    # –ò—â–µ–º –≤—Å–µ –∏–≥—Ä—ã –Ω–∞ 16.08.2025
    yesterday_date = "16.08.2025"
    
    # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –∏–≥—Ä–∞–º–∏ –Ω–∞ 16.08.2025
    game_pattern = rf'{yesterday_date}[^-]*-\s*[^-]+[^-]*-\s*[^-]+'
    all_games = re.findall(game_pattern, html_content)
    
    print(f"üìÖ –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä –Ω–∞ {yesterday_date}: {len(all_games)}")
    
    pullup_games = []
    
    for i, game_text in enumerate(all_games):
        print(f"\nüèÄ –ò–≥—Ä–∞ {i+1}: {game_text.strip()}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –∏–≥—Ä–∞ PullUP
        pullup_patterns = [
            r'pull\s*up',
            r'PullUP',
            r'Pull\s*Up'
        ]
        
        is_pullup_game = any(re.search(pattern, game_text, re.IGNORECASE) for pattern in pullup_patterns)
        
        if is_pullup_game:
            print(f"   ‚úÖ –≠–¢–û –ò–ì–†–ê PULLUP!")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ
            # –ò—â–µ–º —Ñ–æ—Ä–º–∞—Ç: "–ö–æ–º–∞–Ω–¥–∞1 - –ö–æ–º–∞–Ω–¥–∞2"
            teams_match = re.search(r'-\s*([^-]+?)\s*-\s*([^-]+?)\s*\d+:\d+', game_text)
            if teams_match:
                team1 = teams_match.group(1).strip()
                team2 = teams_match.group(2).strip()
                print(f"   –ö–æ–º–∞–Ω–¥–∞ 1: {team1}")
                print(f"   –ö–æ–º–∞–Ω–¥–∞ 2: {team2}")
            else:
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∫–æ–º–∞–Ω–¥—ã")
                print(f"   –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç: {game_text}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—á–µ—Ç
            score_match = re.search(r'(\d+)\s*:\s*(\d+)', game_text)
            if score_match:
                score1, score2 = score_match.groups()
                print(f"   –°—á–µ—Ç: {score1} : {score2}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Ä–µ–º—è
            time_match = re.search(r'\d{2}\.\d{2}', game_text)
            if time_match:
                game_time = time_match.group()
                print(f"   –í—Ä–µ–º—è: {game_time}")
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É
            link_match = re.search(r'href="([^"]+)"', game_text)
            if link_match:
                game_link = link_match.group(1)
                print(f"   –°—Å—ã–ª–∫–∞: {game_link}")
            
            pullup_games.append({
                'text': game_text.strip(),
                'team1': team1 if teams_match else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
                'team2': team2 if teams_match else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
                'score': (score1, score2) if score_match else None,
                'time': game_time if time_match else None,
                'link': game_link if link_match else None
            })
        else:
            print(f"   ‚ùå –ù–µ –∏–≥—Ä–∞ PullUP")
    
    print(f"\nüìà –ò–¢–û–ì–û –ò–ì–† PULLUP –ù–ê {yesterday_date}: {len(pullup_games)}")
    
    if pullup_games:
        print("\nüèÅ –ò–ì–†–´ PULLUP –ù–ê 16.08.2025:")
        for i, game in enumerate(pullup_games, 1):
            print(f"   {i}. {game['team1']} vs {game['team2']}")
            if game['score']:
                print(f"      –°—á–µ—Ç: {game['score'][0]} : {game['score'][1]}")
            if game['time']:
                print(f"      –í—Ä–µ–º—è: {game['time']}")
            if game['link']:
                print(f"      –°—Å—ã–ª–∫–∞: {game['link']}")
    
    return pullup_games

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ê–ù–ê–õ–ò–ó –ò–ì–† PULLUP –ù–ê 16.08.2025")
    print("=" * 60)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        print("üì° –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–∞–π—Ç–∞...")
        html_content = await get_fresh_page_content()
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä—ã –Ω–∞ 16.08.2025
        pullup_games = debug_yesterday_games(html_content)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
