import asyncio
import os
from datetime import datetime
from pullup_notifications import PullUPNotificationManager
from bs4 import BeautifulSoup

async def test_notifications():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    manager = PullUPNotificationManager()
    
    print("=== –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô PULLUP ===\n")
    
    # –¢–µ—Å—Ç 1: –£—Ç—Ä–µ–Ω–Ω–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    print("1. –¢–µ—Å—Ç —É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_games = [
        {
            'team': 'Pull Up',
            'opponent': 'IT Basket',
            'time': '12.30',
            'order': 2
        },
        {
            'team': 'Pull Up',
            'opponent': '–ú–∞–∏–ª–µ –ö–∞—Ä–≥–æ',
            'time': '14.00',
            'order': 3
        }
    ]
    
    test_links = [
        'game.html?gameId=921732&apiUrl=https://reg.infobasket.su&lang=ru',
        'game.html?gameId=921733&apiUrl=https://reg.infobasket.su&lang=ru',
        'game.html?gameId=921726&apiUrl=https://reg.infobasket.su&lang=ru'
    ]
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    lines = []
    for game in test_games:
        lines.append(f"üèÄ –°–µ–≥–æ–¥–Ω—è –∏–≥—Ä–∞ –ø—Ä–æ—Ç–∏–≤ **{game['opponent']}**")
        lines.append(f"‚è∞ –í—Ä–µ–º—è –∏–≥—Ä—ã: **{game['time']}**")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–≥—Ä—É
        game_link = "http://letobasket.ru/"
        if game['order'] and game['order'] <= len(test_links):
            game_link = "http://letobasket.ru/" + test_links[game['order'] - 1]
        
        lines.append(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∏–≥—Ä—É: [—Ç—É—Ç]({game_link})")
        lines.append("")  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É –∏–≥—Ä–∞–º–∏
    
    morning_message = "\n".join(lines)
    print(morning_message)
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 2: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã
    print("2. –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã:")
    
    test_finished_game = {
        'pullup_team': 'Pull Up',
        'opponent_team': 'IT Basket',
        'pullup_score': 85,
        'opponent_score': 72,
        'date': '16.08.2025'
    }
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    if test_finished_game['pullup_score'] > test_finished_game['opponent_score']:
        result_emoji = "üèÜ"
        result_text = "–ø–æ–±–µ–¥–∏–ª–∏"
    elif test_finished_game['pullup_score'] < test_finished_game['opponent_score']:
        result_emoji = "üòî"
        result_text = "–ø—Ä–æ–∏–≥—Ä–∞–ª–∏"
    else:
        result_emoji = "ü§ù"
        result_text = "—Å—ã–≥—Ä–∞–ª–∏ –≤–Ω–∏—á—å—é"
    
    finish_message = f"üèÄ –ò–≥—Ä–∞ –ø—Ä–æ—Ç–∏–≤ **{test_finished_game['opponent_team']}** –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å\n"
    finish_message += f"{result_emoji} –°—á–µ—Ç: **{test_finished_game['pullup_team']} {test_finished_game['pullup_score']} : {test_finished_game['opponent_score']} {test_finished_game['opponent_team']}** ({result_text})\n"
    finish_message += f"üìä –°—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª: [—Ç—É—Ç](http://letobasket.ru/)"
    
    print(finish_message)
    
    print("\n" + "="*50 + "\n")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —Å–∞–π—Ç–∞:")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
        html_content = await manager.get_fresh_page_content()
        soup = BeautifulSoup(html_content, 'html.parser')
        page_text = soup.get_text()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        current_date = manager.extract_current_date(page_text)
        if current_date:
            print(f"üìÖ –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –Ω–∞ —Å–∞–π—Ç–µ: {current_date}")
            
            # –ò—â–µ–º –∏–≥—Ä—ã PullUP
            pullup_games = manager.find_pullup_games(page_text, current_date)
            if pullup_games:
                print(f"üèÄ –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä PullUP: {len(pullup_games)}")
                for i, game in enumerate(pullup_games):
                    print(f"  {i+1}. {game['team']} vs {game['opponent']} - {game['time']} (–ø–æ–∑–∏—Ü–∏—è: {game['order']})")
            else:
                print("‚ùå –ò–≥—Ä—ã PullUP –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∏–≥—Ä—ã
            finished_games = manager.check_finished_games(html_content, current_date)
            if finished_games:
                print(f"üèÅ –ù–∞–π–¥–µ–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä: {len(finished_games)}")
                for i, game in enumerate(finished_games):
                    print(f"  {i+1}. {game['pullup_team']} {game['pullup_score']} : {game['opponent_score']} {game['opponent_team']}")
            else:
                print("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–≥—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞—Ç—É")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    asyncio.run(test_notifications())
