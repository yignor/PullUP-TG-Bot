#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–±–æ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
"""

import asyncio
import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append('..')

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_schedule_poll_results():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–±–æ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"""
    print("üß™ –¢–ï–°–¢ –°–ë–û–†–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í –ì–û–õ–û–°–û–í–ê–ù–ò–ô –ü–û –†–ê–°–ü–ò–°–ê–ù–ò–Æ")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        from schedule_poll_results import schedule_poll_handler
        
        print("‚úÖ –ú–æ–¥—É–ª—å schedule_poll_results –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        telegram_api_id = os.getenv('TELEGRAM_API_ID')
        telegram_api_hash = os.getenv('TELEGRAM_API_HASH')
        telegram_phone = os.getenv('TELEGRAM_PHONE')
        
        print(f"‚úÖ TELEGRAM_API_ID: {'*' * 10}{telegram_api_id[-4:] if telegram_api_id else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"‚úÖ TELEGRAM_API_HASH: {'*' * 10}{telegram_api_hash[-4:] if telegram_api_hash else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"‚úÖ TELEGRAM_PHONE: {telegram_phone if telegram_phone else '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print()
        
        if not all([telegram_api_id, telegram_api_hash, telegram_phone]):
            print("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Telegram Client API –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
            print("üìù –î–ª—è —Å–±–æ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –Ω—É–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å:")
            print("   - TELEGRAM_API_ID")
            print("   - TELEGRAM_API_HASH") 
            print("   - TELEGRAM_PHONE")
            return False
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        print("üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram Client API...")
        if not await schedule_poll_handler.start_client():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Telegram Client API")
            return False
        
        # –ü–æ–ª—É—á–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
        print("\nüìä –ü–æ–∏—Å–∫ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é...")
        schedule_polls = await schedule_poll_handler.get_schedule_polls(days_back=7)
        
        if schedule_polls:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(schedule_polls)} –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é:")
            
            for i, poll in enumerate(schedule_polls, 1):
                print(f"\nüèÄ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ {i}:")
                print(f"   –í–æ–ø—Ä–æ—Å: {poll['question']}")
                print(f"   –í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: {poll['total_voters']}")
                print(f"   –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: {poll['date']}")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
                print(f"   –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:")
                for option in poll['options']:
                    print(f"     - {option['text']}: {option['voters']} –≥–æ–ª–æ—Å–æ–≤")
                
                # –ü–∞—Ä—Å–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                parsed_data = schedule_poll_handler.parse_schedule_votes(poll)
                if parsed_data:
                    game_info = parsed_data.get('game_info', {})
                    votes = parsed_data.get('votes', {})
                    
                    print(f"   üìÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–µ:")
                    print(f"     –°–æ–ø–µ—Ä–Ω–∏–∫: {game_info.get('opponent', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    print(f"     –î–∞—Ç–∞: {game_info.get('date', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    print(f"     –í—Ä–µ–º—è: {game_info.get('time', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    print(f"     –ó–∞–ª: {game_info.get('venue', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    print(f"     –¢–∏–ø –∫–æ–º–∞–Ω–¥—ã: {game_info.get('team_type', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                    
                    print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è:")
                    print(f"     ‚úÖ –ì–æ—Ç–æ–≤—ã: {votes.get('ready', 0)}")
                    print(f"     ‚ùå –ù–µ –≥–æ—Ç–æ–≤—ã: {votes.get('not_ready', 0)}")
                    print(f"     üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä: {votes.get('coach', 0)}")
                    print(f"     üìà –í—Å–µ–≥–æ: {votes.get('total', 0)}")
        else:
            print("üìä –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ:")
            print("   - –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –±—ã–ª–∏ —Å–æ–∑–¥–∞–Ω—ã –≤ —Ç–æ–ø–∏–∫–µ 1282")
            print("   - –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∞—Ç '–õ–µ—Ç–Ω—è—è –ª–∏–≥–∞' –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏")
            print("   - –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
        print(f"\nüìà –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏...")
        summary = await schedule_poll_handler.get_game_attendance_summary(days_back=7)
        
        if summary:
            print(f"\nüìä –°–í–û–î–ö–ê –ü–û–°–ï–©–ê–ï–ú–û–°–¢–ò:")
            print(f"   –í—Å–µ–≥–æ –∏–≥—Ä: {summary['total_games']}")
            print(f"   –í—Å–µ–≥–æ –≥–æ—Ç–æ–≤—ã: {summary['total_ready']}")
            print(f"   –í—Å–µ–≥–æ –Ω–µ –≥–æ—Ç–æ–≤—ã: {summary['total_not_ready']}")
            print(f"   –í—Å–µ–≥–æ —Ç—Ä–µ–Ω–µ—Ä: {summary['total_coach']}")
            
            if summary['games']:
                print(f"\nüèÄ –î–ï–¢–ê–õ–ò –ü–û –ò–ì–†–ê–ú:")
                for game in summary['games']:
                    print(f"   {game['opponent']} ({game['date']} {game['time']})")
                    print(f"     –¢–∏–ø: {game['team_type']}")
                    print(f"     –ó–∞–ª: {game['venue']}")
                    print(f"     –ì–æ—Ç–æ–≤—ã: {game['ready']}, –ù–µ –≥–æ—Ç–æ–≤—ã: {game['not_ready']}, –¢—Ä–µ–Ω–µ—Ä: {game['coach']}")
                    print(f"     –í—Å–µ–≥–æ: {game['total']}")
                    print()
        else:
            print("üìä –°–≤–æ–¥–∫–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –Ω–µ –ø–æ–ª—É—á–µ–Ω–∞")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        await schedule_poll_handler.close_client()
        
        print("\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    asyncio.run(test_schedule_poll_results())
