#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
"""

import asyncio
import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.append('..')

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

async def test_schedule_polls():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é"""
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ì–û–õ–û–°–û–í–ê–ù–ò–ô –ü–û –†–ê–°–ü–ò–°–ê–ù–ò–Æ")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä
        from schedule_polls import SchedulePollsManager
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        manager = SchedulePollsManager()
        
        print(f"‚úÖ –ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {manager.bot is not None}")
        print(f"‚úÖ CHAT_ID: {manager.chat_id}")
        print(f"‚úÖ TOPIC_ID: {manager.topic_id}")
        print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–π: {len(manager.created_polls)}")
        print()
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        print("üì° –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å —Å–∞–π—Ç–∞...")
        html_content = await manager.get_fresh_page_content()
        
        # –ü–∞—Ä—Å–∏–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
        pullup_games = manager.parse_schedule(html_content)
        
        print(f"üìÖ –ù–∞–π–¥–µ–Ω–æ –∏–≥—Ä PullUP –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏: {len(pullup_games)}")
        
        if pullup_games:
            print("\nüèÄ –ò–ì–†–´ PULLUP –í –†–ê–°–ü–ò–°–ê–ù–ò–ò:")
            for i, game in enumerate(pullup_games, 1):
                print(f"   {i}. {game['pullup_team']} vs {game['opponent_team']}")
                print(f"      –î–∞—Ç–∞: {game['date']} ({game['weekday']})")
                print(f"      –í—Ä–µ–º—è: {game['time']}")
                print(f"      –ó–∞–ª: {game['venue']}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω–æ –ª–∏ —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
                poll_id = manager.get_poll_id(game)
                is_created = manager.is_poll_created(game)
                print(f"      ID –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {poll_id}")
                print(f"      –°–æ–∑–¥–∞–Ω–æ: {'‚úÖ –î–∞' if is_created else '‚ùå –ù–µ—Ç'}")
                
                if not is_created:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è
                    poll_title = manager.create_poll_title(game)
                    print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {poll_title}")
                
                print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –ì–û–õ–û–°–û–í–ê–ù–ò–Ø:")
        print("(–í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ 10:00-10:05)")
        
        if pullup_games:
            test_game = pullup_games[0]
            print(f"   –¢–µ—Å—Ç–æ–≤–∞—è –∏–≥—Ä–∞: {test_game['pullup_team']} vs {test_game['opponent_team']}")
            
            poll_title = manager.create_poll_title(test_game)
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è: {poll_title}")
            
            poll_options = [
                "‚úÖ –ì–æ—Ç–æ–≤",
                "‚ùå –ù–µ—Ç", 
                "üë®‚Äçüè´ –¢—Ä–µ–Ω–µ—Ä"
            ]
            print(f"   –í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤: {poll_options}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω–æ –ª–∏ —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
            if manager.is_poll_created(test_game):
                print("   ‚úÖ –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —É–∂–µ —Å–æ–∑–¥–∞–Ω–æ —Ä–∞–Ω–µ–µ")
            else:
                print("   ‚ùå –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ")
        
        print("\nüéØ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_schedule_polls())
